{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/hassao03/code/node_modules/react-native-elements/src/buttons/Button.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport NativeText from \"react-native-web/dist/exports/Text\";\nimport colors from \"../config/colors\";\nimport Text from \"../text/Text\";\nimport MaterialIcon from \"@expo/vector-icons/MaterialIcons\";\nimport getIconType from \"../helpers/getIconType\";\nimport normalize from \"../helpers/normalizeText\";\nimport ViewPropTypes from \"../config/ViewPropTypes\";\n\nvar log = function log() {\n  console.log('please attach method to this component');\n};\n\nvar Button = function Button(props) {\n  var disabled = props.disabled,\n      loading = props.loading,\n      loadingRight = props.loadingRight,\n      activityIndicatorStyle = props.activityIndicatorStyle,\n      buttonStyle = props.buttonStyle,\n      borderRadius = props.borderRadius,\n      title = props.title,\n      onPress = props.onPress,\n      icon = props.icon,\n      iconComponent = props.iconComponent,\n      secondary = props.secondary,\n      secondary2 = props.secondary2,\n      secondary3 = props.secondary3,\n      primary1 = props.primary1,\n      primary2 = props.primary2,\n      backgroundColor = props.backgroundColor,\n      color = props.color,\n      fontSize = props.fontSize,\n      underlayColor = props.underlayColor,\n      raised = props.raised,\n      textStyle = props.textStyle,\n      large = props.large,\n      iconRight = props.iconRight,\n      fontWeight = props.fontWeight,\n      disabledStyle = props.disabledStyle,\n      disabledTextStyle = props.disabledTextStyle,\n      fontFamily = props.fontFamily,\n      containerViewStyle = props.containerViewStyle,\n      rounded = props.rounded,\n      outline = props.outline,\n      transparent = props.transparent,\n      textNumberOfLines = props.textNumberOfLines,\n      textEllipsizeMode = props.textEllipsizeMode,\n      allowFontScaling = props.allowFontScaling,\n      attributes = _objectWithoutProperties(props, [\"disabled\", \"loading\", \"loadingRight\", \"activityIndicatorStyle\", \"buttonStyle\", \"borderRadius\", \"title\", \"onPress\", \"icon\", \"iconComponent\", \"secondary\", \"secondary2\", \"secondary3\", \"primary1\", \"primary2\", \"backgroundColor\", \"color\", \"fontSize\", \"underlayColor\", \"raised\", \"textStyle\", \"large\", \"iconRight\", \"fontWeight\", \"disabledStyle\", \"disabledTextStyle\", \"fontFamily\", \"containerViewStyle\", \"rounded\", \"outline\", \"transparent\", \"textNumberOfLines\", \"textEllipsizeMode\", \"allowFontScaling\"]);\n\n  var Component = props.Component,\n      rightIcon = props.rightIcon,\n      leftIcon = props.leftIcon;\n  var leftIconElement;\n\n  if (!leftIcon && icon) {\n    leftIcon = icon;\n  }\n\n  if (leftIcon) {\n    var Icon;\n\n    if (iconComponent) {\n      Icon = iconComponent;\n    } else if (!leftIcon.type) {\n      Icon = MaterialIcon;\n    } else {\n      Icon = getIconType(leftIcon.type);\n    }\n\n    leftIconElement = React.createElement(Icon, _extends({}, leftIcon, {\n      color: leftIcon.color || 'white',\n      size: leftIcon.size || (large ? 26 : 18),\n      style: [styles.icon, leftIcon.style && leftIcon.style],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  var rightIconElement;\n\n  if (iconRight || rightIcon) {\n    if (!rightIcon) {\n      rightIcon = iconRight;\n    }\n\n    var _Icon;\n\n    if (iconComponent) {\n      _Icon = iconComponent;\n    } else if (!rightIcon.type) {\n      _Icon = MaterialIcon;\n    } else {\n      _Icon = getIconType(rightIcon.type);\n    }\n\n    rightIconElement = React.createElement(_Icon, _extends({}, rightIcon, {\n      color: rightIcon.color || 'white',\n      size: rightIcon.size || (large ? 26 : 18),\n      style: [styles.iconRight, rightIcon.style && rightIcon.style],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  var loadingElement;\n\n  if (loading) {\n    loadingElement = React.createElement(ActivityIndicator, {\n      animating: true,\n      style: [styles.activityIndicatorStyle, activityIndicatorStyle],\n      color: color || 'white',\n      size: large && 'large' || 'small',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    });\n  }\n\n  if (!Component && Platform.OS === 'ios') {\n    Component = TouchableHighlight;\n  }\n\n  if (!Component && Platform.OS === 'android') {\n    Component = TouchableNativeFeedback;\n  }\n\n  if (!Component) {\n    Component = TouchableHighlight;\n  }\n\n  if (Platform.OS === 'android' && borderRadius && !attributes.background) {\n    if (Platform.Version >= 21) {\n      attributes.background = TouchableNativeFeedback.Ripple('ThemeAttrAndroid', true);\n    } else {\n      attributes.background = TouchableNativeFeedback.SelectableBackground();\n    }\n  }\n\n  var baseFont = {\n    color: textStyle && textStyle.color || color || stylesObject.text.color,\n    size: textStyle && textStyle.fontSize || fontSize || !large && stylesObject.smallFont.fontSize || stylesObject.text.fontSize\n  };\n  var textOptions = {};\n\n  if (textNumberOfLines) {\n    textOptions.numberOfLines = textNumberOfLines;\n\n    if (textEllipsizeMode) {\n      textOptions.ellipsizeMode = textEllipsizeMode;\n    }\n  }\n\n  return React.createElement(View, {\n    style: [styles.container, raised && styles.raised, containerViewStyle, borderRadius && {\n      borderRadius: borderRadius\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, React.createElement(Component, _extends({}, attributes, {\n    underlayColor: underlayColor || 'transparent',\n    onPress: onPress || log,\n    disabled: disabled || false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    pointerEvents: \"box-only\",\n    style: [styles.button, secondary && {\n      backgroundColor: colors.secondary\n    }, secondary2 && {\n      backgroundColor: colors.secondary2\n    }, secondary3 && {\n      backgroundColor: colors.secondary3\n    }, primary1 && {\n      backgroundColor: colors.primary1\n    }, primary2 && {\n      backgroundColor: colors.primary2\n    }, backgroundColor && {\n      backgroundColor: backgroundColor\n    }, borderRadius && {\n      borderRadius: borderRadius\n    }, !large && styles.small, rounded && {\n      borderRadius: baseFont.size * 3.8,\n      paddingHorizontal: !large ? stylesObject.small.padding * 1.5 : stylesObject.button.padding * 1.5\n    }, outline && {\n      borderWidth: 1,\n      backgroundColor: 'transparent',\n      borderColor: baseFont.color\n    }, transparent && {\n      borderWidth: 0,\n      backgroundColor: 'transparent'\n    }, buttonStyle && buttonStyle, disabled && {\n      backgroundColor: colors.disabled\n    }, disabled && disabledStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, icon && !iconRight || leftIconElement ? leftIconElement : null, loading && !loadingRight && loadingElement, React.createElement(Text, _extends({\n    style: [styles.text, color && {\n      color: color\n    }, !large && styles.smallFont, fontSize && {\n      fontSize: fontSize\n    }, textStyle && textStyle, fontWeight && {\n      fontWeight: fontWeight\n    }, fontFamily && {\n      fontFamily: fontFamily\n    }, disabled && disabledTextStyle]\n  }, textOptions, {\n    allowFontScaling: allowFontScaling,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }), title), loading && loadingRight && loadingElement, icon && iconRight || rightIconElement ? rightIconElement : null)));\n};\n\nButton.propTypes = {\n  buttonStyle: ViewPropTypes.style,\n  title: PropTypes.string,\n  onPress: PropTypes.any,\n  icon: PropTypes.object,\n  leftIcon: PropTypes.object,\n  rightIcon: PropTypes.object,\n  iconRight: PropTypes.object,\n  iconComponent: PropTypes.any,\n  secondary: PropTypes.bool,\n  secondary2: PropTypes.bool,\n  secondary3: PropTypes.bool,\n  primary1: PropTypes.bool,\n  primary2: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  color: PropTypes.string,\n  fontSize: PropTypes.any,\n  underlayColor: PropTypes.string,\n  raised: PropTypes.bool,\n  textStyle: NativeText.propTypes.style,\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n  activityIndicatorStyle: ViewPropTypes.style,\n  loadingRight: PropTypes.bool,\n  Component: PropTypes.any,\n  borderRadius: PropTypes.number,\n  large: PropTypes.bool,\n  fontWeight: PropTypes.string,\n  disabledStyle: ViewPropTypes.style,\n  disabledTextStyle: NativeText.propTypes.style,\n  fontFamily: PropTypes.string,\n  containerViewStyle: ViewPropTypes.style,\n  rounded: PropTypes.bool,\n  outline: PropTypes.bool,\n  transparent: PropTypes.bool,\n  allowFontScaling: PropTypes.bool,\n  textNumberOfLines: PropTypes.number,\n  textEllipsizeMode: PropTypes.string\n};\nvar stylesObject = {\n  container: {\n    marginLeft: 15,\n    marginRight: 15\n  },\n  button: {\n    padding: 19,\n    backgroundColor: colors.primary,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  text: {\n    color: 'white',\n    fontSize: normalize(16)\n  },\n  icon: {\n    marginRight: 10\n  },\n  iconRight: {\n    marginLeft: 10\n  },\n  small: {\n    padding: 12\n  },\n  smallFont: {\n    fontSize: normalize(14)\n  },\n  activityIndicatorStyle: {\n    marginHorizontal: 10,\n    height: 0\n  },\n  raised: _objectSpread({}, Platform.select({\n    ios: {\n      shadowColor: 'rgba(0,0,0, .4)',\n      shadowOffset: {\n        height: 1,\n        width: 1\n      },\n      shadowOpacity: 1,\n      shadowRadius: 1\n    },\n    android: {\n      backgroundColor: '#fff',\n      elevation: 2\n    }\n  }))\n};\nvar styles = StyleSheet.create(stylesObject);\nexport default Button;","map":{"version":3,"sources":["/Users/hassao03/code/node_modules/react-native-elements/src/buttons/Button.js"],"names":["PropTypes","React","colors","Text","MaterialIcon","getIconType","normalize","ViewPropTypes","log","console","Button","props","disabled","loading","loadingRight","activityIndicatorStyle","buttonStyle","borderRadius","title","onPress","icon","iconComponent","secondary","secondary2","secondary3","primary1","primary2","backgroundColor","color","fontSize","underlayColor","raised","textStyle","large","iconRight","fontWeight","disabledStyle","disabledTextStyle","fontFamily","containerViewStyle","rounded","outline","transparent","textNumberOfLines","textEllipsizeMode","allowFontScaling","attributes","Component","rightIcon","leftIcon","leftIconElement","Icon","type","size","styles","style","rightIconElement","loadingElement","Platform","OS","TouchableHighlight","TouchableNativeFeedback","background","Version","Ripple","SelectableBackground","baseFont","stylesObject","text","smallFont","textOptions","numberOfLines","ellipsizeMode","container","button","small","paddingHorizontal","padding","borderWidth","borderColor","propTypes","string","any","object","bool","NativeText","number","marginLeft","marginRight","primary","justifyContent","alignItems","flexDirection","marginHorizontal","height","select","ios","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","android","elevation","StyleSheet","create"],"mappings":";;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;;AAUA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,OAAOC,SAAP;AACA,OAAOC,aAAP;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAChBC,EAAAA,OAAO,CAACD,GAAR,CAAY,wCAAZ;AACD,CAFD;;AAIA,IAAME,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AAAA,MAEpBC,QAFoB,GAqClBD,KArCkB,CAEpBC,QAFoB;AAAA,MAGpBC,OAHoB,GAqClBF,KArCkB,CAGpBE,OAHoB;AAAA,MAIpBC,YAJoB,GAqClBH,KArCkB,CAIpBG,YAJoB;AAAA,MAKpBC,sBALoB,GAqClBJ,KArCkB,CAKpBI,sBALoB;AAAA,MAMpBC,WANoB,GAqClBL,KArCkB,CAMpBK,WANoB;AAAA,MAOpBC,YAPoB,GAqClBN,KArCkB,CAOpBM,YAPoB;AAAA,MAQpBC,KARoB,GAqClBP,KArCkB,CAQpBO,KARoB;AAAA,MASpBC,OAToB,GAqClBR,KArCkB,CASpBQ,OAToB;AAAA,MAUpBC,IAVoB,GAqClBT,KArCkB,CAUpBS,IAVoB;AAAA,MAWpBC,aAXoB,GAqClBV,KArCkB,CAWpBU,aAXoB;AAAA,MAYpBC,SAZoB,GAqClBX,KArCkB,CAYpBW,SAZoB;AAAA,MAapBC,UAboB,GAqClBZ,KArCkB,CAapBY,UAboB;AAAA,MAcpBC,UAdoB,GAqClBb,KArCkB,CAcpBa,UAdoB;AAAA,MAepBC,QAfoB,GAqClBd,KArCkB,CAepBc,QAfoB;AAAA,MAgBpBC,QAhBoB,GAqClBf,KArCkB,CAgBpBe,QAhBoB;AAAA,MAiBpBC,eAjBoB,GAqClBhB,KArCkB,CAiBpBgB,eAjBoB;AAAA,MAkBpBC,KAlBoB,GAqClBjB,KArCkB,CAkBpBiB,KAlBoB;AAAA,MAmBpBC,QAnBoB,GAqClBlB,KArCkB,CAmBpBkB,QAnBoB;AAAA,MAoBpBC,aApBoB,GAqClBnB,KArCkB,CAoBpBmB,aApBoB;AAAA,MAqBpBC,MArBoB,GAqClBpB,KArCkB,CAqBpBoB,MArBoB;AAAA,MAsBpBC,SAtBoB,GAqClBrB,KArCkB,CAsBpBqB,SAtBoB;AAAA,MAuBpBC,KAvBoB,GAqClBtB,KArCkB,CAuBpBsB,KAvBoB;AAAA,MAwBpBC,SAxBoB,GAqClBvB,KArCkB,CAwBpBuB,SAxBoB;AAAA,MAyBpBC,UAzBoB,GAqClBxB,KArCkB,CAyBpBwB,UAzBoB;AAAA,MA0BpBC,aA1BoB,GAqClBzB,KArCkB,CA0BpByB,aA1BoB;AAAA,MA2BpBC,iBA3BoB,GAqClB1B,KArCkB,CA2BpB0B,iBA3BoB;AAAA,MA4BpBC,UA5BoB,GAqClB3B,KArCkB,CA4BpB2B,UA5BoB;AAAA,MA6BpBC,kBA7BoB,GAqClB5B,KArCkB,CA6BpB4B,kBA7BoB;AAAA,MA8BpBC,OA9BoB,GAqClB7B,KArCkB,CA8BpB6B,OA9BoB;AAAA,MA+BpBC,OA/BoB,GAqClB9B,KArCkB,CA+BpB8B,OA/BoB;AAAA,MAgCpBC,WAhCoB,GAqClB/B,KArCkB,CAgCpB+B,WAhCoB;AAAA,MAiCpBC,iBAjCoB,GAqClBhC,KArCkB,CAiCpBgC,iBAjCoB;AAAA,MAkCpBC,iBAlCoB,GAqClBjC,KArCkB,CAkCpBiC,iBAlCoB;AAAA,MAmCpBC,gBAnCoB,GAqClBlC,KArCkB,CAmCpBkC,gBAnCoB;AAAA,MAoCjBC,UApCiB,4BAqClBnC,KArCkB;;AAAA,MAsChBoC,SAtCgB,GAsCmBpC,KAtCnB,CAsChBoC,SAtCgB;AAAA,MAsCLC,SAtCK,GAsCmBrC,KAtCnB,CAsCLqC,SAtCK;AAAA,MAsCMC,QAtCN,GAsCmBtC,KAtCnB,CAsCMsC,QAtCN;AAwCtB,MAAIC,eAAJ;;AACA,MAAI,CAACD,QAAD,IAAa7B,IAAjB,EAAuB;AACrB6B,IAAAA,QAAQ,GAAG7B,IAAX;AACD;;AACD,MAAI6B,QAAJ,EAAc;AACZ,QAAIE,IAAJ;;AACA,QAAI9B,aAAJ,EAAmB;AACjB8B,MAAAA,IAAI,GAAG9B,aAAP;AACD,KAFD,MAEO,IAAI,CAAC4B,QAAQ,CAACG,IAAd,EAAoB;AACzBD,MAAAA,IAAI,GAAG/C,YAAP;AACD,KAFM,MAEA;AACL+C,MAAAA,IAAI,GAAG9C,WAAW,CAAC4C,QAAQ,CAACG,IAAV,CAAlB;AACD;;AACDF,IAAAA,eAAe,GACb,oBAAC,IAAD,eACMD,QADN;AAEE,MAAA,KAAK,EAAEA,QAAQ,CAACrB,KAAT,IAAkB,OAF3B;AAGE,MAAA,IAAI,EAAEqB,QAAQ,CAACI,IAAT,KAAkBpB,KAAK,GAAG,EAAH,GAAQ,EAA/B,CAHR;AAIE,MAAA,KAAK,EAAE,CAACqB,MAAM,CAAClC,IAAR,EAAc6B,QAAQ,CAACM,KAAT,IAAkBN,QAAQ,CAACM,KAAzC,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAQD;;AACD,MAAIC,gBAAJ;;AACA,MAAItB,SAAS,IAAIc,SAAjB,EAA4B;AAC1B,QAAI,CAACA,SAAL,EAAgB;AACdA,MAAAA,SAAS,GAAGd,SAAZ;AACD;;AACD,QAAIiB,KAAJ;;AACA,QAAI9B,aAAJ,EAAmB;AACjB8B,MAAAA,KAAI,GAAG9B,aAAP;AACD,KAFD,MAEO,IAAI,CAAC2B,SAAS,CAACI,IAAf,EAAqB;AAC1BD,MAAAA,KAAI,GAAG/C,YAAP;AACD,KAFM,MAEA;AACL+C,MAAAA,KAAI,GAAG9C,WAAW,CAAC2C,SAAS,CAACI,IAAX,CAAlB;AACD;;AACDI,IAAAA,gBAAgB,GACd,oBAAC,KAAD,eACMR,SADN;AAEE,MAAA,KAAK,EAAEA,SAAS,CAACpB,KAAV,IAAmB,OAF5B;AAGE,MAAA,IAAI,EAAEoB,SAAS,CAACK,IAAV,KAAmBpB,KAAK,GAAG,EAAH,GAAQ,EAAhC,CAHR;AAIE,MAAA,KAAK,EAAE,CAACqB,MAAM,CAACpB,SAAR,EAAmBc,SAAS,CAACO,KAAV,IAAmBP,SAAS,CAACO,KAAhD,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAQD;;AACD,MAAIE,cAAJ;;AACA,MAAI5C,OAAJ,EAAa;AACX4C,IAAAA,cAAc,GACZ,oBAAC,iBAAD;AACE,MAAA,SAAS,EAAE,IADb;AAEE,MAAA,KAAK,EAAE,CAACH,MAAM,CAACvC,sBAAR,EAAgCA,sBAAhC,CAFT;AAGE,MAAA,KAAK,EAAEa,KAAK,IAAI,OAHlB;AAIE,MAAA,IAAI,EAAGK,KAAK,IAAI,OAAV,IAAsB,OAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD;;AACD,MAAI,CAACc,SAAD,IAAcW,QAAQ,CAACC,EAAT,KAAgB,KAAlC,EAAyC;AACvCZ,IAAAA,SAAS,GAAGa,kBAAZ;AACD;;AACD,MAAI,CAACb,SAAD,IAAcW,QAAQ,CAACC,EAAT,KAAgB,SAAlC,EAA6C;AAC3CZ,IAAAA,SAAS,GAAGc,uBAAZ;AACD;;AACD,MAAI,CAACd,SAAL,EAAgB;AACdA,IAAAA,SAAS,GAAGa,kBAAZ;AACD;;AAED,MAAIF,QAAQ,CAACC,EAAT,KAAgB,SAAhB,IAA8B1C,YAAY,IAAI,CAAC6B,UAAU,CAACgB,UAA9D,EAA2E;AACzE,QAAIJ,QAAQ,CAACK,OAAT,IAAoB,EAAxB,EAA4B;AAC1BjB,MAAAA,UAAU,CAACgB,UAAX,GAAwBD,uBAAuB,CAACG,MAAxB,CACtB,kBADsB,EAEtB,IAFsB,CAAxB;AAID,KALD,MAKO;AACLlB,MAAAA,UAAU,CAACgB,UAAX,GAAwBD,uBAAuB,CAACI,oBAAxB,EAAxB;AACD;AACF;;AAED,MAAMC,QAAQ,GAAG;AACftC,IAAAA,KAAK,EAAGI,SAAS,IAAIA,SAAS,CAACJ,KAAxB,IAAkCA,KAAlC,IAA2CuC,YAAY,CAACC,IAAb,CAAkBxC,KADrD;AAEfyB,IAAAA,IAAI,EACDrB,SAAS,IAAIA,SAAS,CAACH,QAAxB,IACAA,QADA,IAEC,CAACI,KAAD,IAAUkC,YAAY,CAACE,SAAb,CAAuBxC,QAFlC,IAGAsC,YAAY,CAACC,IAAb,CAAkBvC;AANL,GAAjB;AASA,MAAIyC,WAAW,GAAG,EAAlB;;AACA,MAAI3B,iBAAJ,EAAuB;AACrB2B,IAAAA,WAAW,CAACC,aAAZ,GAA4B5B,iBAA5B;;AACA,QAAIC,iBAAJ,EAAuB;AACrB0B,MAAAA,WAAW,CAACE,aAAZ,GAA4B5B,iBAA5B;AACD;AACF;;AAED,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLU,MAAM,CAACmB,SADF,EAEL1C,MAAM,IAAIuB,MAAM,CAACvB,MAFZ,EAGLQ,kBAHK,EAILtB,YAAY,IAAI;AAAEA,MAAAA,YAAY,EAAZA;AAAF,KAJX,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,SAAD,eACM6B,UADN;AAEE,IAAA,aAAa,EAAEhB,aAAa,IAAI,aAFlC;AAGE,IAAA,OAAO,EAAEX,OAAO,IAAIX,GAHtB;AAIE,IAAA,QAAQ,EAAEI,QAAQ,IAAI,KAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAME,oBAAC,IAAD;AACE,IAAA,aAAa,EAAC,UADhB;AAEE,IAAA,KAAK,EAAE,CACL0C,MAAM,CAACoB,MADF,EAELpD,SAAS,IAAI;AAAEK,MAAAA,eAAe,EAAEzB,MAAM,CAACoB;AAA1B,KAFR,EAGLC,UAAU,IAAI;AAAEI,MAAAA,eAAe,EAAEzB,MAAM,CAACqB;AAA1B,KAHT,EAILC,UAAU,IAAI;AAAEG,MAAAA,eAAe,EAAEzB,MAAM,CAACsB;AAA1B,KAJT,EAKLC,QAAQ,IAAI;AAAEE,MAAAA,eAAe,EAAEzB,MAAM,CAACuB;AAA1B,KALP,EAMLC,QAAQ,IAAI;AAAEC,MAAAA,eAAe,EAAEzB,MAAM,CAACwB;AAA1B,KANP,EAOLC,eAAe,IAAI;AAAEA,MAAAA,eAAe,EAAEA;AAAnB,KAPd,EAQLV,YAAY,IAAI;AAAEA,MAAAA,YAAY,EAAZA;AAAF,KARX,EASL,CAACgB,KAAD,IAAUqB,MAAM,CAACqB,KATZ,EAULnC,OAAO,IAAI;AACTvB,MAAAA,YAAY,EAAEiD,QAAQ,CAACb,IAAT,GAAgB,GADrB;AAETuB,MAAAA,iBAAiB,EAAE,CAAC3C,KAAD,GACfkC,YAAY,CAACQ,KAAb,CAAmBE,OAAnB,GAA6B,GADd,GAEfV,YAAY,CAACO,MAAb,CAAoBG,OAApB,GAA8B;AAJzB,KAVN,EAgBLpC,OAAO,IAAI;AACTqC,MAAAA,WAAW,EAAE,CADJ;AAETnD,MAAAA,eAAe,EAAE,aAFR;AAGToD,MAAAA,WAAW,EAAEb,QAAQ,CAACtC;AAHb,KAhBN,EAqBLc,WAAW,IAAI;AACboC,MAAAA,WAAW,EAAE,CADA;AAEbnD,MAAAA,eAAe,EAAE;AAFJ,KArBV,EAyBLX,WAAW,IAAIA,WAzBV,EA0BLJ,QAAQ,IAAI;AAAEe,MAAAA,eAAe,EAAEzB,MAAM,CAACU;AAA1B,KA1BP,EA2BLA,QAAQ,IAAIwB,aA3BP,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgCIhB,IAAI,IAAI,CAACc,SAAV,IAAwBgB,eAAxB,GAA0CA,eAA1C,GAA4D,IAhC/D,EAiCGrC,OAAO,IAAI,CAACC,YAAZ,IAA4B2C,cAjC/B,EAkCE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLH,MAAM,CAACc,IADF,EAELxC,KAAK,IAAI;AAAEA,MAAAA,KAAK,EAALA;AAAF,KAFJ,EAGL,CAACK,KAAD,IAAUqB,MAAM,CAACe,SAHZ,EAILxC,QAAQ,IAAI;AAAEA,MAAAA,QAAQ,EAARA;AAAF,KAJP,EAKLG,SAAS,IAAIA,SALR,EAMLG,UAAU,IAAI;AAAEA,MAAAA,UAAU,EAAVA;AAAF,KANT,EAOLG,UAAU,IAAI;AAAEA,MAAAA,UAAU,EAAVA;AAAF,KAPT,EAQL1B,QAAQ,IAAIyB,iBARP;AADT,KAWMiC,WAXN;AAYE,IAAA,gBAAgB,EAAEzB,gBAZpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAcG3B,KAdH,CAlCF,EAkDGL,OAAO,IAAIC,YAAX,IAA2B2C,cAlD9B,EAmDIrC,IAAI,IAAIc,SAAT,IAAuBsB,gBAAvB,GAA0CA,gBAA1C,GAA6D,IAnDhE,CANF,CARF,CADF;AAuED,CA5MD;;AA8MA9C,MAAM,CAACsE,SAAP,GAAmB;AACjBhE,EAAAA,WAAW,EAAET,aAAa,CAACgD,KADV;AAEjBrC,EAAAA,KAAK,EAAElB,SAAS,CAACiF,MAFA;AAGjB9D,EAAAA,OAAO,EAAEnB,SAAS,CAACkF,GAHF;AAIjB9D,EAAAA,IAAI,EAAEpB,SAAS,CAACmF,MAJC;AAKjBlC,EAAAA,QAAQ,EAAEjD,SAAS,CAACmF,MALH;AAMjBnC,EAAAA,SAAS,EAAEhD,SAAS,CAACmF,MANJ;AAOjBjD,EAAAA,SAAS,EAAElC,SAAS,CAACmF,MAPJ;AAQjB9D,EAAAA,aAAa,EAAErB,SAAS,CAACkF,GARR;AASjB5D,EAAAA,SAAS,EAAEtB,SAAS,CAACoF,IATJ;AAUjB7D,EAAAA,UAAU,EAAEvB,SAAS,CAACoF,IAVL;AAWjB5D,EAAAA,UAAU,EAAExB,SAAS,CAACoF,IAXL;AAYjB3D,EAAAA,QAAQ,EAAEzB,SAAS,CAACoF,IAZH;AAajB1D,EAAAA,QAAQ,EAAE1B,SAAS,CAACoF,IAbH;AAcjBzD,EAAAA,eAAe,EAAE3B,SAAS,CAACiF,MAdV;AAejBrD,EAAAA,KAAK,EAAE5B,SAAS,CAACiF,MAfA;AAgBjBpD,EAAAA,QAAQ,EAAE7B,SAAS,CAACkF,GAhBH;AAiBjBpD,EAAAA,aAAa,EAAE9B,SAAS,CAACiF,MAjBR;AAkBjBlD,EAAAA,MAAM,EAAE/B,SAAS,CAACoF,IAlBD;AAmBjBpD,EAAAA,SAAS,EAAEqD,UAAU,CAACL,SAAX,CAAqBzB,KAnBf;AAoBjB3C,EAAAA,QAAQ,EAAEZ,SAAS,CAACoF,IApBH;AAqBjBvE,EAAAA,OAAO,EAAEb,SAAS,CAACoF,IArBF;AAsBjBrE,EAAAA,sBAAsB,EAAER,aAAa,CAACgD,KAtBrB;AAuBjBzC,EAAAA,YAAY,EAAEd,SAAS,CAACoF,IAvBP;AAwBjBrC,EAAAA,SAAS,EAAE/C,SAAS,CAACkF,GAxBJ;AAyBjBjE,EAAAA,YAAY,EAAEjB,SAAS,CAACsF,MAzBP;AA0BjBrD,EAAAA,KAAK,EAAEjC,SAAS,CAACoF,IA1BA;AA2BjBjD,EAAAA,UAAU,EAAEnC,SAAS,CAACiF,MA3BL;AA4BjB7C,EAAAA,aAAa,EAAE7B,aAAa,CAACgD,KA5BZ;AA6BjBlB,EAAAA,iBAAiB,EAAEgD,UAAU,CAACL,SAAX,CAAqBzB,KA7BvB;AA8BjBjB,EAAAA,UAAU,EAAEtC,SAAS,CAACiF,MA9BL;AA+BjB1C,EAAAA,kBAAkB,EAAEhC,aAAa,CAACgD,KA/BjB;AAgCjBf,EAAAA,OAAO,EAAExC,SAAS,CAACoF,IAhCF;AAiCjB3C,EAAAA,OAAO,EAAEzC,SAAS,CAACoF,IAjCF;AAkCjB1C,EAAAA,WAAW,EAAE1C,SAAS,CAACoF,IAlCN;AAmCjBvC,EAAAA,gBAAgB,EAAE7C,SAAS,CAACoF,IAnCX;AAoCjBzC,EAAAA,iBAAiB,EAAE3C,SAAS,CAACsF,MApCZ;AAqCjB1C,EAAAA,iBAAiB,EAAE5C,SAAS,CAACiF;AArCZ,CAAnB;AAwCA,IAAMd,YAAY,GAAG;AACnBM,EAAAA,SAAS,EAAE;AACTc,IAAAA,UAAU,EAAE,EADH;AAETC,IAAAA,WAAW,EAAE;AAFJ,GADQ;AAKnBd,EAAAA,MAAM,EAAE;AACNG,IAAAA,OAAO,EAAE,EADH;AAENlD,IAAAA,eAAe,EAAEzB,MAAM,CAACuF,OAFlB;AAGNC,IAAAA,cAAc,EAAE,QAHV;AAINC,IAAAA,UAAU,EAAE,QAJN;AAKNC,IAAAA,aAAa,EAAE;AALT,GALW;AAYnBxB,EAAAA,IAAI,EAAE;AACJxC,IAAAA,KAAK,EAAE,OADH;AAEJC,IAAAA,QAAQ,EAAEvB,SAAS,CAAC,EAAD;AAFf,GAZa;AAgBnBc,EAAAA,IAAI,EAAE;AACJoE,IAAAA,WAAW,EAAE;AADT,GAhBa;AAmBnBtD,EAAAA,SAAS,EAAE;AACTqD,IAAAA,UAAU,EAAE;AADH,GAnBQ;AAsBnBZ,EAAAA,KAAK,EAAE;AACLE,IAAAA,OAAO,EAAE;AADJ,GAtBY;AAyBnBR,EAAAA,SAAS,EAAE;AACTxC,IAAAA,QAAQ,EAAEvB,SAAS,CAAC,EAAD;AADV,GAzBQ;AA4BnBS,EAAAA,sBAAsB,EAAE;AACtB8E,IAAAA,gBAAgB,EAAE,EADI;AAEtBC,IAAAA,MAAM,EAAE;AAFc,GA5BL;AAgCnB/D,EAAAA,MAAM,oBACD2B,QAAQ,CAACqC,MAAT,CAAgB;AACjBC,IAAAA,GAAG,EAAE;AACHC,MAAAA,WAAW,EAAE,iBADV;AAEHC,MAAAA,YAAY,EAAE;AAAEJ,QAAAA,MAAM,EAAE,CAAV;AAAaK,QAAAA,KAAK,EAAE;AAApB,OAFX;AAGHC,MAAAA,aAAa,EAAE,CAHZ;AAIHC,MAAAA,YAAY,EAAE;AAJX,KADY;AAOjBC,IAAAA,OAAO,EAAE;AACP3E,MAAAA,eAAe,EAAE,MADV;AAEP4E,MAAAA,SAAS,EAAE;AAFJ;AAPQ,GAAhB,CADC;AAhCa,CAArB;AAgDA,IAAMjD,MAAM,GAAGkD,UAAU,CAACC,MAAX,CAAkBtC,YAAlB,CAAf;AAEA,eAAezD,MAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  TouchableNativeFeedback,\n  TouchableHighlight,\n  StyleSheet,\n  View,\n  Platform,\n  ActivityIndicator,\n  Text as NativeText,\n} from 'react-native';\nimport colors from '../config/colors';\nimport Text from '../text/Text';\nimport MaterialIcon from 'react-native-vector-icons/MaterialIcons';\nimport getIconType from '../helpers/getIconType';\nimport normalize from '../helpers/normalizeText';\nimport ViewPropTypes from '../config/ViewPropTypes';\n\nconst log = () => {\n  console.log('please attach method to this component'); //eslint-disable-line no-console\n};\n\nconst Button = props => {\n  const {\n    disabled,\n    loading,\n    loadingRight,\n    activityIndicatorStyle,\n    buttonStyle,\n    borderRadius,\n    title,\n    onPress,\n    icon,\n    iconComponent,\n    secondary,\n    secondary2,\n    secondary3,\n    primary1,\n    primary2,\n    backgroundColor,\n    color,\n    fontSize,\n    underlayColor,\n    raised,\n    textStyle,\n    large,\n    iconRight,\n    fontWeight,\n    disabledStyle,\n    disabledTextStyle,\n    fontFamily,\n    containerViewStyle,\n    rounded,\n    outline,\n    transparent,\n    textNumberOfLines,\n    textEllipsizeMode,\n    allowFontScaling,\n    ...attributes\n  } = props;\n  let { Component, rightIcon, leftIcon } = props;\n\n  let leftIconElement;\n  if (!leftIcon && icon) {\n    leftIcon = icon;\n  }\n  if (leftIcon) {\n    let Icon;\n    if (iconComponent) {\n      Icon = iconComponent;\n    } else if (!leftIcon.type) {\n      Icon = MaterialIcon;\n    } else {\n      Icon = getIconType(leftIcon.type);\n    }\n    leftIconElement = (\n      <Icon\n        {...leftIcon}\n        color={leftIcon.color || 'white'}\n        size={leftIcon.size || (large ? 26 : 18)}\n        style={[styles.icon, leftIcon.style && leftIcon.style]}\n      />\n    );\n  }\n  let rightIconElement;\n  if (iconRight || rightIcon) {\n    if (!rightIcon) {\n      rightIcon = iconRight;\n    }\n    let Icon;\n    if (iconComponent) {\n      Icon = iconComponent;\n    } else if (!rightIcon.type) {\n      Icon = MaterialIcon;\n    } else {\n      Icon = getIconType(rightIcon.type);\n    }\n    rightIconElement = (\n      <Icon\n        {...rightIcon}\n        color={rightIcon.color || 'white'}\n        size={rightIcon.size || (large ? 26 : 18)}\n        style={[styles.iconRight, rightIcon.style && rightIcon.style]}\n      />\n    );\n  }\n  let loadingElement;\n  if (loading) {\n    loadingElement = (\n      <ActivityIndicator\n        animating={true}\n        style={[styles.activityIndicatorStyle, activityIndicatorStyle]}\n        color={color || 'white'}\n        size={(large && 'large') || 'small'}\n      />\n    );\n  }\n  if (!Component && Platform.OS === 'ios') {\n    Component = TouchableHighlight;\n  }\n  if (!Component && Platform.OS === 'android') {\n    Component = TouchableNativeFeedback;\n  }\n  if (!Component) {\n    Component = TouchableHighlight;\n  }\n\n  if (Platform.OS === 'android' && (borderRadius && !attributes.background)) {\n    if (Platform.Version >= 21) {\n      attributes.background = TouchableNativeFeedback.Ripple(\n        'ThemeAttrAndroid',\n        true\n      );\n    } else {\n      attributes.background = TouchableNativeFeedback.SelectableBackground();\n    }\n  }\n\n  const baseFont = {\n    color: (textStyle && textStyle.color) || color || stylesObject.text.color,\n    size:\n      (textStyle && textStyle.fontSize) ||\n      fontSize ||\n      (!large && stylesObject.smallFont.fontSize) ||\n      stylesObject.text.fontSize,\n  };\n\n  let textOptions = {};\n  if (textNumberOfLines) {\n    textOptions.numberOfLines = textNumberOfLines;\n    if (textEllipsizeMode) {\n      textOptions.ellipsizeMode = textEllipsizeMode;\n    }\n  }\n\n  return (\n    <View\n      style={[\n        styles.container,\n        raised && styles.raised,\n        containerViewStyle,\n        borderRadius && { borderRadius },\n      ]}\n    >\n      <Component\n        {...attributes}\n        underlayColor={underlayColor || 'transparent'}\n        onPress={onPress || log}\n        disabled={disabled || false}\n      >\n        <View\n          pointerEvents=\"box-only\"\n          style={[\n            styles.button,\n            secondary && { backgroundColor: colors.secondary },\n            secondary2 && { backgroundColor: colors.secondary2 },\n            secondary3 && { backgroundColor: colors.secondary3 },\n            primary1 && { backgroundColor: colors.primary1 },\n            primary2 && { backgroundColor: colors.primary2 },\n            backgroundColor && { backgroundColor: backgroundColor },\n            borderRadius && { borderRadius },\n            !large && styles.small,\n            rounded && {\n              borderRadius: baseFont.size * 3.8,\n              paddingHorizontal: !large\n                ? stylesObject.small.padding * 1.5\n                : stylesObject.button.padding * 1.5,\n            },\n            outline && {\n              borderWidth: 1,\n              backgroundColor: 'transparent',\n              borderColor: baseFont.color,\n            },\n            transparent && {\n              borderWidth: 0,\n              backgroundColor: 'transparent',\n            },\n            buttonStyle && buttonStyle,\n            disabled && { backgroundColor: colors.disabled },\n            disabled && disabledStyle,\n          ]}\n        >\n          {(icon && !iconRight) || leftIconElement ? leftIconElement : null}\n          {loading && !loadingRight && loadingElement}\n          <Text\n            style={[\n              styles.text,\n              color && { color },\n              !large && styles.smallFont,\n              fontSize && { fontSize },\n              textStyle && textStyle,\n              fontWeight && { fontWeight },\n              fontFamily && { fontFamily },\n              disabled && disabledTextStyle,\n            ]}\n            {...textOptions}\n            allowFontScaling={allowFontScaling}\n          >\n            {title}\n          </Text>\n          {loading && loadingRight && loadingElement}\n          {(icon && iconRight) || rightIconElement ? rightIconElement : null}\n        </View>\n      </Component>\n    </View>\n  );\n};\n\nButton.propTypes = {\n  buttonStyle: ViewPropTypes.style,\n  title: PropTypes.string,\n  onPress: PropTypes.any,\n  icon: PropTypes.object,\n  leftIcon: PropTypes.object,\n  rightIcon: PropTypes.object,\n  iconRight: PropTypes.object,\n  iconComponent: PropTypes.any,\n  secondary: PropTypes.bool,\n  secondary2: PropTypes.bool,\n  secondary3: PropTypes.bool,\n  primary1: PropTypes.bool,\n  primary2: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  color: PropTypes.string,\n  fontSize: PropTypes.any,\n  underlayColor: PropTypes.string,\n  raised: PropTypes.bool,\n  textStyle: NativeText.propTypes.style,\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n  activityIndicatorStyle: ViewPropTypes.style,\n  loadingRight: PropTypes.bool,\n  Component: PropTypes.any,\n  borderRadius: PropTypes.number,\n  large: PropTypes.bool,\n  fontWeight: PropTypes.string,\n  disabledStyle: ViewPropTypes.style,\n  disabledTextStyle: NativeText.propTypes.style,\n  fontFamily: PropTypes.string,\n  containerViewStyle: ViewPropTypes.style,\n  rounded: PropTypes.bool,\n  outline: PropTypes.bool,\n  transparent: PropTypes.bool,\n  allowFontScaling: PropTypes.bool,\n  textNumberOfLines: PropTypes.number,\n  textEllipsizeMode: PropTypes.string,\n};\n\nconst stylesObject = {\n  container: {\n    marginLeft: 15,\n    marginRight: 15,\n  },\n  button: {\n    padding: 19,\n    backgroundColor: colors.primary,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  text: {\n    color: 'white',\n    fontSize: normalize(16),\n  },\n  icon: {\n    marginRight: 10,\n  },\n  iconRight: {\n    marginLeft: 10,\n  },\n  small: {\n    padding: 12,\n  },\n  smallFont: {\n    fontSize: normalize(14),\n  },\n  activityIndicatorStyle: {\n    marginHorizontal: 10,\n    height: 0,\n  },\n  raised: {\n    ...Platform.select({\n      ios: {\n        shadowColor: 'rgba(0,0,0, .4)',\n        shadowOffset: { height: 1, width: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 1,\n      },\n      android: {\n        backgroundColor: '#fff',\n        elevation: 2,\n      },\n    }),\n  },\n};\n\nconst styles = StyleSheet.create(stylesObject);\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}