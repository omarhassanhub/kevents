{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/hassao03/code/src/screens/CreateScreen.js\";\nimport React, { useState } from 'react';\nimport { Container, Item, Input, Body, Content, Button, Text, Label, Header, Left, Right, Title, Form } from 'native-base';\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\nimport moment from 'moment';\nimport { getCognitoUser } from \"../utils/users\";\nimport { useFormInput } from \"../utils/forms\";\nimport { API, graphqlOperation } from 'aws-amplify';\nimport Analytics from '@aws-amplify/analytics';\nimport { createEvent } from \"../graphql/mutations\";\nexport default function CreateScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      datetime = _useState2[0],\n      setDatetime = _useState2[1];\n\n  var _useState3 = useState('datetime'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mode = _useState4[0],\n      setMode = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDatePickerVisible = _useState6[0],\n      setDatePickerVisibility = _useState6[1];\n\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n\n  var handleConfirm = function handleConfirm(datetime) {\n    setDatetime(datetime);\n    hideDatePicker();\n  };\n\n  var user = getCognitoUser();\n  var attributes = user.attributes;\n  var title = useFormInput();\n  var description = useFormInput();\n\n  var createNewEvent = function createNewEvent() {\n    var input, result;\n    return _regeneratorRuntime.async(function createNewEvent$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(!title.value || !description.value)) {\n              _context.next = 3;\n              break;\n            }\n\n            alert('Pls fill up the information');\n            return _context.abrupt(\"return\");\n\n          case 3:\n            input = {\n              input: {\n                startAt: Date.parse(datetime) / 1000,\n                title: title.value,\n                description: description.value,\n                eventUserId: attributes.sub,\n                status: 'CREATED'\n              }\n            };\n            result = null;\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createEvent, input)));\n\n          case 8:\n            result = _context.sent;\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](5);\n            console.log(_context.t0);\n\n          case 14:\n            navigation.navigate('Home', {\n              refreshList: true\n            });\n            _context.next = 17;\n            return _regeneratorRuntime.awrap(Analytics.updateEndpoint({\n              userAttributes: {\n                latestEvent: [title.value]\n              }\n            }).then(function () {\n              console.log('createdEvent');\n              Analytics.record({\n                name: 'createdEvent',\n                attributes: {\n                  username: user.username,\n                  userId: user.attributes.sub\n                }\n              });\n            }));\n\n          case 17:\n            return _context.abrupt(\"return\", result.data);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 11]], Promise);\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, React.createElement(Left, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), React.createElement(Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Home\")), React.createElement(Right, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Close\")))), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, React.createElement(Item, {\n    fixedLabel: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Title\"), React.createElement(Input, _extends({}, title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }))), React.createElement(Item, {\n    fixedLabel: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Description\"), React.createElement(Input, _extends({}, description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }))), React.createElement(Item, {\n    fixedLabel: true,\n    last: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Date & Time\"), React.createElement(Input, {\n    onFocus: function onFocus() {\n      return showDatePicker();\n    },\n    value: moment(datetime).calendar(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }), React.createElement(DateTimePickerModal, {\n    isVisible: isDatePickerVisible,\n    mode: mode,\n    datetime: datetime,\n    onConfirm: handleConfirm,\n    onCancel: hideDatePicker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }))), React.createElement(Button, {\n    full: true,\n    onPress: function onPress() {\n      return createNewEvent();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Save\"))));\n}","map":{"version":3,"sources":["/Users/hassao03/code/src/screens/CreateScreen.js"],"names":["React","useState","Container","Item","Input","Body","Content","Button","Text","Label","Header","Left","Right","Title","Form","DateTimePickerModal","moment","getCognitoUser","useFormInput","API","graphqlOperation","Analytics","createEvent","CreateScreen","navigation","datetime","setDatetime","mode","setMode","isDatePickerVisible","setDatePickerVisibility","showDatePicker","hideDatePicker","handleConfirm","user","attributes","title","description","createNewEvent","value","alert","input","startAt","Date","parse","eventUserId","sub","status","result","graphql","console","log","navigate","refreshList","updateEndpoint","userAttributes","latestEvent","then","record","name","username","userId","data","goBack","calendar"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Container,\n  Item,\n  Input,\n  Body,\n  Content,\n  Button,\n  Text,\n  Label,\n  Header,\n  Left,\n  Right,\n  Title,\n  Form,\n} from 'native-base';\n\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\n\nimport moment from 'moment';\n\nimport { getCognitoUser } from '../utils/users';\nimport { useFormInput } from '../utils/forms';\n\nimport { API, graphqlOperation } from 'aws-amplify';\nimport Analytics from '@aws-amplify/analytics';\nimport { createEvent } from '../graphql/mutations';\n\nexport default function CreateScreen({ navigation }) {\n  const [datetime, setDatetime] = useState();\n  const [mode, setMode] = useState('datetime');\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n\n  const showDatePicker = () => {\n    setDatePickerVisibility(true);\n  };\n\n  const hideDatePicker = () => {\n    setDatePickerVisibility(false);\n  };\n\n  const handleConfirm = (datetime) => {\n    setDatetime(datetime);\n    hideDatePicker();\n  };\n\n  let user = getCognitoUser();\n  const { attributes } = user;\n\n  let title = useFormInput();\n  let description = useFormInput();\n\n  const createNewEvent = async () => {\n    if (!title.value || !description.value) {\n      alert('Pls fill up the information');\n      return;\n    }\n    const input = {\n      input: {\n        startAt: Date.parse(datetime) / 1000,\n        title: title.value,\n        description: description.value,\n        eventUserId: attributes.sub,\n        status: 'CREATED',\n      },\n    };\n\n    let result = null;\n    try {\n      result = await API.graphql(graphqlOperation(createEvent, input));\n    } catch (e) {\n      console.log(e);\n    }\n\n    navigation.navigate('Home', { refreshList: true });\n\n    await Analytics.updateEndpoint({\n      userAttributes: {\n        latestEvent: [title.value],\n      },\n    }).then(() => {\n      console.log('createdEvent');\n      Analytics.record({\n        name: 'createdEvent',\n        attributes: {\n          username: user.username,\n          userId: user.attributes.sub,\n        },\n      });\n    });\n\n    return result.data;\n  };\n\n  return (\n    <Container>\n      <Header>\n        <Left />\n        <Body>\n          <Title>Home</Title>\n        </Body>\n        <Right>\n          <Button transparent onPress={() => navigation.goBack()}>\n            <Text>Close</Text>\n          </Button>\n        </Right>\n      </Header>\n      <Content>\n        <Form>\n          <Item fixedLabel>\n            <Label>Title</Label>\n            <Input {...title} />\n          </Item>\n          <Item fixedLabel>\n            <Label>Description</Label>\n            <Input {...description} />\n          </Item>\n          <Item fixedLabel last>\n            <Label>Date & Time</Label>\n            <Input\n              onFocus={() => showDatePicker()}\n              value={moment(datetime).calendar()}\n            />\n            <DateTimePickerModal\n              isVisible={isDatePickerVisible}\n              mode={mode}\n              datetime={datetime}\n              onConfirm={handleConfirm}\n              onCancel={hideDatePicker}\n            />\n          </Item>\n        </Form>\n\n        <Button full onPress={() => createNewEvent()}>\n          <Text>Save</Text>\n        </Button>\n      </Content>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}