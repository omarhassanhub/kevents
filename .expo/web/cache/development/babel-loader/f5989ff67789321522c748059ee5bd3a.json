{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/hassao03/code/node_modules/react-native-elements/src/badge/badge.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport colors from \"../config/colors\";\nimport ViewPropTypes from \"../config/ViewPropTypes\";\n\nvar Badge = function Badge(props) {\n  var containerStyle = props.containerStyle,\n      textStyle = props.textStyle,\n      wrapperStyle = props.wrapperStyle,\n      onPress = props.onPress,\n      component = props.component,\n      value = props.value,\n      children = props.children,\n      element = props.element,\n      attributes = _objectWithoutProperties(props, [\"containerStyle\", \"textStyle\", \"wrapperStyle\", \"onPress\", \"component\", \"value\", \"children\", \"element\"]);\n\n  if (element) return element;\n  var Component = View;\n  var childElement = React.createElement(Text, {\n    style: [styles.text, textStyle && textStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, value);\n\n  if (children) {\n    childElement = children;\n  }\n\n  if (children && value) {\n    console.error('Badge can only contain either child element or value');\n  }\n\n  if (!component && onPress) {\n    Component = TouchableOpacity;\n  }\n\n  if (React.isValidElement(component)) {\n    Component = component;\n  }\n\n  return React.createElement(View, {\n    style: [styles.container && wrapperStyle && wrapperStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(Component, _extends({}, attributes, {\n    style: [styles.badge, containerStyle && containerStyle],\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), childElement));\n};\n\nBadge.propTypes = {\n  containerStyle: ViewPropTypes.style,\n  wrapperStyle: ViewPropTypes.style,\n  textStyle: Text.propTypes.style,\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onPress: PropTypes.func,\n  component: PropTypes.func,\n  element: PropTypes.element\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row'\n  },\n  badge: {\n    padding: 12,\n    paddingTop: 3,\n    paddingBottom: 3,\n    backgroundColor: colors.grey1,\n    borderRadius: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    fontSize: 14,\n    color: 'white'\n  }\n});\nexport default Badge;","map":{"version":3,"sources":["/Users/hassao03/code/node_modules/react-native-elements/src/badge/badge.js"],"names":["PropTypes","React","colors","ViewPropTypes","Badge","props","containerStyle","textStyle","wrapperStyle","onPress","component","value","children","element","attributes","Component","View","childElement","styles","text","console","error","TouchableOpacity","isValidElement","container","badge","propTypes","style","Text","oneOfType","arrayOf","string","number","func","StyleSheet","create","flexDirection","padding","paddingTop","paddingBottom","backgroundColor","grey1","borderRadius","alignItems","justifyContent","fontSize","color"],"mappings":"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","sourcesContent":["/*eslint-disable no-console */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Text, View, StyleSheet, TouchableOpacity } from 'react-native';\nimport colors from '../config/colors';\nimport ViewPropTypes from '../config/ViewPropTypes';\n\nconst Badge = props => {\n  const {\n    containerStyle,\n    textStyle,\n    wrapperStyle,\n    onPress,\n    component,\n    value,\n    children,\n    element,\n    ...attributes\n  } = props;\n\n  if (element) return element;\n\n  let Component = View;\n  let childElement = (\n    <Text style={[styles.text, textStyle && textStyle]}>\n      {value}\n    </Text>\n  );\n\n  if (children) {\n    childElement = children;\n  }\n\n  if (children && value) {\n    console.error('Badge can only contain either child element or value');\n  }\n\n  if (!component && onPress) {\n    Component = TouchableOpacity;\n  }\n\n  if (React.isValidElement(component)) {\n    Component = component;\n  }\n\n  return (\n    <View style={[styles.container && wrapperStyle && wrapperStyle]}>\n      <Component\n        {...attributes}\n        style={[styles.badge, containerStyle && containerStyle]}\n        onPress={onPress}\n      >\n        {childElement}\n      </Component>\n    </View>\n  );\n};\n\nBadge.propTypes = {\n  containerStyle: ViewPropTypes.style,\n  wrapperStyle: ViewPropTypes.style,\n  textStyle: Text.propTypes.style,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.element),\n  ]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onPress: PropTypes.func,\n  component: PropTypes.func,\n  element: PropTypes.element,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  badge: {\n    padding: 12,\n    paddingTop: 3,\n    paddingBottom: 3,\n    backgroundColor: colors.grey1,\n    borderRadius: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    fontSize: 14,\n    color: 'white',\n  },\n});\n\nexport default Badge;\n"]},"metadata":{},"sourceType":"module"}