{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/hassao03/code/node_modules/react-native-elements/src/avatar/Avatar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport NativeText from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ViewPropTypes from \"../config/ViewPropTypes\";\nimport Icon from \"../icons/Icon\";\nimport Text from \"../text/Text\";\nvar DEFAULT_COLORS = ['#000', '#333', '#555', '#888', '#aaa', '#ddd'];\n\nvar Avatar = function Avatar(props) {\n  var component = props.component,\n      onPress = props.onPress,\n      onLongPress = props.onLongPress,\n      containerStyle = props.containerStyle,\n      icon = props.icon,\n      iconStyle = props.iconStyle,\n      source = props.source,\n      small = props.small,\n      medium = props.medium,\n      large = props.large,\n      xlarge = props.xlarge,\n      avatarStyle = props.avatarStyle,\n      rounded = props.rounded,\n      title = props.title,\n      titleStyle = props.titleStyle,\n      overlayContainerStyle = props.overlayContainerStyle,\n      activeOpacity = props.activeOpacity,\n      showEditButton = props.showEditButton,\n      editButton = props.editButton,\n      onEditPress = props.onEditPress,\n      imageProps = props.imageProps,\n      attributes = _objectWithoutProperties(props, [\"component\", \"onPress\", \"onLongPress\", \"containerStyle\", \"icon\", \"iconStyle\", \"source\", \"small\", \"medium\", \"large\", \"xlarge\", \"avatarStyle\", \"rounded\", \"title\", \"titleStyle\", \"overlayContainerStyle\", \"activeOpacity\", \"showEditButton\", \"editButton\", \"onEditPress\", \"imageProps\"]);\n\n  var width = props.width,\n      height = props.height;\n\n  if (small) {\n    width = 34;\n    height = 34;\n  } else if (medium) {\n    width = 50;\n    height = 50;\n  } else if (large) {\n    width = 75;\n    height = 75;\n  } else if (xlarge) {\n    width = 150;\n    height = 150;\n  } else if (!width && !height) {\n    width = 34;\n    height = 34;\n  } else if (!width) {\n    width = height;\n  } else if (!height) {\n    height = width;\n  }\n\n  var titleSize = width / 2;\n  var iconSize = width / 2;\n  var Component = onPress || onLongPress ? TouchableOpacity : View;\n\n  if (component) {\n    Component = component;\n  }\n\n  var renderUtils = function renderUtils() {\n    if (showEditButton) {\n      var editButtonProps = _objectSpread({}, editButton);\n\n      var defaultEditButtonSize = (width + height) / 2 / 3;\n      var editButtonSize = editButton.size || defaultEditButtonSize;\n      var editButtonSizeStyle = {\n        width: editButtonSize,\n        height: editButtonSize,\n        borderRadius: editButtonSize / 2\n      };\n      var editButtonIconSize = editButtonSize * 0.8;\n      return React.createElement(TouchableHighlight, {\n        style: [styles.editButton, editButtonSizeStyle, editButtonProps.style],\n        underlayColor: editButtonProps.underlayColor,\n        onPress: onEditPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, React.createElement(Icon, {\n        size: editButtonIconSize,\n        name: editButtonProps.iconName,\n        type: editButtonProps.iconType,\n        color: editButtonProps.iconColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      })));\n    }\n  };\n\n  var renderContent = function renderContent() {\n    if (source) {\n      return React.createElement(Image, _extends({\n        style: [styles.avatar, rounded && {\n          borderRadius: width / 2\n        }, avatarStyle && avatarStyle],\n        source: source\n      }, imageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }));\n    } else if (title) {\n      return React.createElement(Text, {\n        style: [styles.title, titleStyle && titleStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, title);\n    } else if (icon) {\n      return React.createElement(Icon, {\n        style: iconStyle && iconStyle,\n        color: icon.color || 'white',\n        name: icon.name || 'user',\n        size: icon.size || iconSize,\n        type: icon.type && icon.type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n\n  var styles = StyleSheet.create({\n    container: {\n      paddingTop: 10,\n      paddingRight: 10,\n      paddingBottom: 10,\n      backgroundColor: 'transparent',\n      width: width,\n      height: height\n    },\n    avatar: {\n      width: width,\n      height: height\n    },\n    overlayContainer: {\n      flex: 1,\n      alignItems: 'center',\n      backgroundColor: 'rgba(0,0,0,0.2)',\n      alignSelf: 'stretch',\n      justifyContent: 'center',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    title: {\n      color: '#ffffff',\n      fontSize: titleSize,\n      backgroundColor: 'rgba(0,0,0,0)',\n      textAlign: 'center'\n    },\n    editButton: _objectSpread({\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: DEFAULT_COLORS[4]\n    }, Platform.select({\n      ios: {\n        shadowColor: DEFAULT_COLORS[0],\n        shadowOffset: {\n          width: 1,\n          height: 1\n        },\n        shadowRadius: 2,\n        shadowOpacity: 0.5\n      },\n      android: {\n        elevation: 1\n      }\n    }))\n  });\n  return React.createElement(Component, _extends({}, attributes, {\n    onPress: onPress,\n    onLongPress: onLongPress,\n    activeOpacity: activeOpacity,\n    style: [styles.container, rounded && {\n      borderRadius: width / 2\n    }, containerStyle && containerStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: [styles.overlayContainer, rounded && {\n      borderRadius: width / 2\n    }, overlayContainerStyle && overlayContainerStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, renderContent()), renderUtils());\n};\n\nvar defaultProps = {\n  showEditButton: false,\n  onEditPress: null,\n  editButton: {\n    size: null,\n    iconName: 'mode-edit',\n    iconType: 'material',\n    iconColor: '#fff',\n    underlayColor: DEFAULT_COLORS[0],\n    style: null\n  }\n};\nAvatar.propTypes = {\n  component: PropTypes.oneOf([View, TouchableOpacity, TouchableHighlight, TouchableNativeFeedback, TouchableWithoutFeedback]),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  containerStyle: PropTypes.any,\n  source: Image.propTypes.source,\n  avatarStyle: PropTypes.any,\n  rounded: PropTypes.bool,\n  title: PropTypes.string,\n  titleStyle: NativeText.propTypes.style,\n  overlayContainerStyle: PropTypes.any,\n  activeOpacity: PropTypes.number,\n  icon: PropTypes.object,\n  iconStyle: NativeText.propTypes.style,\n  small: PropTypes.bool,\n  medium: PropTypes.bool,\n  large: PropTypes.bool,\n  xlarge: PropTypes.bool,\n  showEditButton: PropTypes.bool,\n  onEditPress: PropTypes.func,\n  editButton: PropTypes.shape({\n    size: PropTypes.number,\n    iconName: PropTypes.string,\n    iconType: PropTypes.string,\n    iconColor: PropTypes.string,\n    underlayColor: PropTypes.string,\n    style: ViewPropTypes.style\n  }),\n  imageProps: PropTypes.object\n};\nAvatar.defaultProps = defaultProps;\nexport default Avatar;","map":{"version":3,"sources":["/Users/hassao03/code/node_modules/react-native-elements/src/avatar/Avatar.js"],"names":["PropTypes","React","ViewPropTypes","Icon","Text","DEFAULT_COLORS","Avatar","props","component","onPress","onLongPress","containerStyle","icon","iconStyle","source","small","medium","large","xlarge","avatarStyle","rounded","title","titleStyle","overlayContainerStyle","activeOpacity","showEditButton","editButton","onEditPress","imageProps","attributes","width","height","titleSize","iconSize","Component","TouchableOpacity","View","renderUtils","editButtonProps","defaultEditButtonSize","editButtonSize","size","editButtonSizeStyle","borderRadius","editButtonIconSize","styles","style","underlayColor","iconName","iconType","iconColor","renderContent","avatar","color","name","type","StyleSheet","create","container","paddingTop","paddingRight","paddingBottom","backgroundColor","overlayContainer","flex","alignItems","alignSelf","justifyContent","position","top","left","right","bottom","fontSize","textAlign","Platform","select","ios","shadowColor","shadowOffset","shadowRadius","shadowOpacity","android","elevation","defaultProps","propTypes","oneOf","TouchableHighlight","TouchableNativeFeedback","TouchableWithoutFeedback","number","func","any","Image","bool","string","NativeText","object","shape"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  View,\n  Text as NativeText,\n  Image,\n  Platform,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableHighlight,\n  TouchableNativeFeedback,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport ViewPropTypes from '../config/ViewPropTypes';\n\nimport Icon from '../icons/Icon';\nimport Text from '../text/Text';\n\nconst DEFAULT_COLORS = ['#000', '#333', '#555', '#888', '#aaa', '#ddd'];\n\nconst Avatar = props => {\n  const {\n    component,\n    onPress,\n    onLongPress,\n    containerStyle,\n    icon,\n    iconStyle,\n    source,\n    small,\n    medium,\n    large,\n    xlarge,\n    avatarStyle,\n    rounded,\n    title,\n    titleStyle,\n    overlayContainerStyle,\n    activeOpacity,\n    showEditButton,\n    editButton,\n    onEditPress,\n    imageProps,\n    ...attributes\n  } = props;\n\n  let { width, height } = props;\n\n  if (small) {\n    width = 34;\n    height = 34;\n  } else if (medium) {\n    width = 50;\n    height = 50;\n  } else if (large) {\n    width = 75;\n    height = 75;\n  } else if (xlarge) {\n    width = 150;\n    height = 150;\n  } else if (!width && !height) {\n    width = 34;\n    height = 34;\n  } else if (!width) {\n    width = height;\n  } else if (!height) {\n    height = width;\n  }\n\n  let titleSize = width / 2;\n  let iconSize = width / 2;\n\n  let Component = onPress || onLongPress ? TouchableOpacity : View;\n  if (component) {\n    Component = component;\n  }\n\n  const renderUtils = () => {\n    if (showEditButton) {\n      const editButtonProps = { ...editButton };\n\n      const defaultEditButtonSize = (width + height) / 2 / 3;\n      const editButtonSize = editButton.size || defaultEditButtonSize;\n      const editButtonSizeStyle = {\n        width: editButtonSize,\n        height: editButtonSize,\n        borderRadius: editButtonSize / 2,\n      };\n      const editButtonIconSize = editButtonSize * 0.8;\n\n      return (\n        <TouchableHighlight\n          style={[\n            styles.editButton,\n            editButtonSizeStyle,\n            editButtonProps.style,\n          ]}\n          underlayColor={editButtonProps.underlayColor}\n          onPress={onEditPress}\n        >\n          <View>\n            <Icon\n              size={editButtonIconSize}\n              name={editButtonProps.iconName}\n              type={editButtonProps.iconType}\n              color={editButtonProps.iconColor}\n            />\n          </View>\n        </TouchableHighlight>\n      );\n    }\n  };\n\n  const renderContent = () => {\n    if (source) {\n      return (\n        <Image\n          style={[\n            styles.avatar,\n            rounded && { borderRadius: width / 2 },\n            avatarStyle && avatarStyle,\n          ]}\n          source={source}\n          {...imageProps}\n        />\n      );\n    } else if (title) {\n      return (\n        <Text style={[styles.title, titleStyle && titleStyle]}>\n          {title}\n        </Text>\n      );\n    } else if (icon) {\n      return (\n        <Icon\n          style={iconStyle && iconStyle}\n          color={icon.color || 'white'}\n          name={icon.name || 'user'}\n          size={icon.size || iconSize}\n          type={icon.type && icon.type}\n        />\n      );\n    }\n  };\n\n  const styles = StyleSheet.create({\n    container: {\n      paddingTop: 10,\n      paddingRight: 10,\n      paddingBottom: 10,\n      backgroundColor: 'transparent',\n      width: width,\n      height: height,\n    },\n    avatar: {\n      width: width,\n      height: height,\n    },\n    overlayContainer: {\n      flex: 1,\n      alignItems: 'center',\n      backgroundColor: 'rgba(0,0,0,0.2)',\n      alignSelf: 'stretch',\n      justifyContent: 'center',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    },\n    title: {\n      color: '#ffffff',\n      fontSize: titleSize,\n      backgroundColor: 'rgba(0,0,0,0)',\n      textAlign: 'center',\n    },\n    editButton: {\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: DEFAULT_COLORS[4],\n      ...Platform.select({\n        ios: {\n          shadowColor: DEFAULT_COLORS[0],\n          shadowOffset: { width: 1, height: 1 },\n          shadowRadius: 2,\n          shadowOpacity: 0.5,\n        },\n        android: {\n          elevation: 1,\n        },\n      }),\n    },\n  });\n\n  return (\n    <Component\n      {...attributes}\n      onPress={onPress}\n      onLongPress={onLongPress}\n      activeOpacity={activeOpacity}\n      style={[\n        styles.container,\n        rounded && { borderRadius: width / 2 },\n        containerStyle && containerStyle,\n      ]}\n    >\n      <View\n        style={[\n          styles.overlayContainer,\n          rounded && { borderRadius: width / 2 },\n          overlayContainerStyle && overlayContainerStyle,\n        ]}\n      >\n        {renderContent()}\n      </View>\n      {renderUtils()}\n    </Component>\n  );\n};\n\nconst defaultProps = {\n  showEditButton: false,\n  onEditPress: null,\n  editButton: {\n    size: null,\n    iconName: 'mode-edit',\n    iconType: 'material',\n    iconColor: '#fff',\n    underlayColor: DEFAULT_COLORS[0],\n    style: null,\n  },\n};\n\nAvatar.propTypes = {\n  component: PropTypes.oneOf([\n    View,\n    TouchableOpacity,\n    TouchableHighlight,\n    TouchableNativeFeedback,\n    TouchableWithoutFeedback,\n  ]),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  containerStyle: PropTypes.any,\n  source: Image.propTypes.source,\n  avatarStyle: PropTypes.any,\n  rounded: PropTypes.bool,\n  title: PropTypes.string,\n  titleStyle: NativeText.propTypes.style,\n  overlayContainerStyle: PropTypes.any,\n  activeOpacity: PropTypes.number,\n  icon: PropTypes.object,\n  iconStyle: NativeText.propTypes.style,\n  small: PropTypes.bool,\n  medium: PropTypes.bool,\n  large: PropTypes.bool,\n  xlarge: PropTypes.bool,\n  showEditButton: PropTypes.bool,\n  onEditPress: PropTypes.func,\n  editButton: PropTypes.shape({\n    size: PropTypes.number,\n    iconName: PropTypes.string,\n    iconType: PropTypes.string,\n    iconColor: PropTypes.string,\n    underlayColor: PropTypes.string,\n    style: ViewPropTypes.style,\n  }),\n  imageProps: PropTypes.object,\n};\n\nAvatar.defaultProps = defaultProps;\n\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}