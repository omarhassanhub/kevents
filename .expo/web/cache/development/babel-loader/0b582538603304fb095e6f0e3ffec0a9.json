{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/hassao03/code/node_modules/react-native-elements/src/list/ListItem.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Avatar from \"../avatar/Avatar\";\nimport Badge from \"../badge/badge\";\nimport Icon from \"../icons/Icon\";\nimport Text from \"../text/Text\";\nimport colors from \"../config/colors\";\nimport fonts from \"../config/fonts\";\nimport normalize from \"../helpers/normalizeText\";\nimport ViewPropTypes from \"../config/ViewPropTypes\";\n\nvar ListItem = function ListItem(props) {\n  var onPress = props.onPress,\n      title = props.title,\n      leftIcon = props.leftIcon,\n      rightIcon = props.rightIcon,\n      leftIconOnPress = props.leftIconOnPress,\n      leftIconOnLongPress = props.leftIconOnLongPress,\n      leftIconUnderlayColor = props.leftIconUnderlayColor,\n      leftIconContainerStyle = props.leftIconContainerStyle,\n      avatarStyle = props.avatarStyle,\n      avatarContainerStyle = props.avatarContainerStyle,\n      avatarOverlayContainerStyle = props.avatarOverlayContainerStyle,\n      underlayColor = props.underlayColor,\n      subtitle = props.subtitle,\n      subtitleStyle = props.subtitleStyle,\n      containerStyle = props.containerStyle,\n      wrapperStyle = props.wrapperStyle,\n      titleNumberOfLines = props.titleNumberOfLines,\n      titleStyle = props.titleStyle,\n      titleContainerStyle = props.titleContainerStyle,\n      hideChevron = props.hideChevron,\n      chevronColor = props.chevronColor,\n      roundAvatar = props.roundAvatar,\n      component = props.component,\n      fontFamily = props.fontFamily,\n      rightTitle = props.rightTitle,\n      rightTitleContainerStyle = props.rightTitleContainerStyle,\n      rightTitleStyle = props.rightTitleStyle,\n      rightTitleNumberOfLines = props.rightTitleNumberOfLines,\n      subtitleContainerStyle = props.subtitleContainerStyle,\n      subtitleNumberOfLines = props.subtitleNumberOfLines,\n      badge = props.badge,\n      label = props.label,\n      onLongPress = props.onLongPress,\n      switchButton = props.switchButton,\n      onSwitch = props.onSwitch,\n      switchDisabled = props.switchDisabled,\n      switchOnTintColor = props.switchOnTintColor,\n      switchThumbTintColor = props.switchThumbTintColor,\n      switchTintColor = props.switchTintColor,\n      switched = props.switched,\n      textInput = props.textInput,\n      textInputAutoCapitalize = props.textInputAutoCapitalize,\n      textInputAutoCorrect = props.textInputAutoCorrect,\n      textInputAutoFocus = props.textInputAutoFocus,\n      textInputEditable = props.textInputEditable,\n      textInputKeyboardType = props.textInputKeyboardType,\n      textInputMaxLength = props.textInputMaxLength,\n      textInputMultiline = props.textInputMultiline,\n      textInputOnChangeText = props.textInputOnChangeText,\n      textInputOnFocus = props.textInputOnFocus,\n      textInputOnBlur = props.textInputOnBlur,\n      textInputSelectTextOnFocus = props.textInputSelectTextOnFocus,\n      textInputReturnKeyType = props.textInputReturnKeyType,\n      textInputValue = props.textInputValue,\n      textInputSecure = props.textInputSecure,\n      textInputStyle = props.textInputStyle,\n      textInputContainerStyle = props.textInputContainerStyle,\n      textInputPlaceholder = props.textInputPlaceholder,\n      onPressRightIcon = props.onPressRightIcon,\n      disabled = props.disabled,\n      disabledStyle = props.disabledStyle,\n      attributes = _objectWithoutProperties(props, [\"onPress\", \"title\", \"leftIcon\", \"rightIcon\", \"leftIconOnPress\", \"leftIconOnLongPress\", \"leftIconUnderlayColor\", \"leftIconContainerStyle\", \"avatarStyle\", \"avatarContainerStyle\", \"avatarOverlayContainerStyle\", \"underlayColor\", \"subtitle\", \"subtitleStyle\", \"containerStyle\", \"wrapperStyle\", \"titleNumberOfLines\", \"titleStyle\", \"titleContainerStyle\", \"hideChevron\", \"chevronColor\", \"roundAvatar\", \"component\", \"fontFamily\", \"rightTitle\", \"rightTitleContainerStyle\", \"rightTitleStyle\", \"rightTitleNumberOfLines\", \"subtitleContainerStyle\", \"subtitleNumberOfLines\", \"badge\", \"label\", \"onLongPress\", \"switchButton\", \"onSwitch\", \"switchDisabled\", \"switchOnTintColor\", \"switchThumbTintColor\", \"switchTintColor\", \"switched\", \"textInput\", \"textInputAutoCapitalize\", \"textInputAutoCorrect\", \"textInputAutoFocus\", \"textInputEditable\", \"textInputKeyboardType\", \"textInputMaxLength\", \"textInputMultiline\", \"textInputOnChangeText\", \"textInputOnFocus\", \"textInputOnBlur\", \"textInputSelectTextOnFocus\", \"textInputReturnKeyType\", \"textInputValue\", \"textInputSecure\", \"textInputStyle\", \"textInputContainerStyle\", \"textInputPlaceholder\", \"onPressRightIcon\", \"disabled\", \"disabledStyle\"]);\n\n  var avatar = props.avatar;\n  var Component = onPress || onLongPress ? TouchableHighlight : View;\n  var LeftIconWrapper = leftIconOnPress || leftIconOnLongPress ? TouchableHighlight : View;\n\n  if (component) {\n    Component = component;\n  }\n\n  if (typeof avatar === 'string') {\n    avatar = {\n      uri: avatar\n    };\n  }\n\n  return React.createElement(Component, _extends({}, attributes, {\n    onLongPress: onLongPress,\n    onPress: onPress,\n    disabled: disabled,\n    underlayColor: underlayColor,\n    style: [styles.container, containerStyle && containerStyle, disabled && styles.disabled, disabled && disabledStyle && disabledStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: [styles.wrapper, wrapperStyle && wrapperStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, React.isValidElement(leftIcon) ? leftIcon : leftIcon && leftIcon.name && React.createElement(LeftIconWrapper, {\n    onLongPress: leftIconOnLongPress,\n    onPress: leftIconOnPress,\n    disabled: disabled,\n    underlayColor: leftIconUnderlayColor,\n    style: [styles.iconStyle, leftIconContainerStyle && leftIconContainerStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, React.createElement(Icon, {\n    type: leftIcon.type,\n    iconStyle: [styles.icon, leftIcon.style && leftIcon.style],\n    name: leftIcon.name,\n    color: leftIcon.color || colors.grey4,\n    size: leftIcon.size || 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }))), avatar && React.isValidElement(avatar) ? avatar : avatar && !React.isValidElement(avatar) && React.createElement(Avatar, {\n    avatarStyle: avatarStyle && avatarStyle,\n    containerStyle: avatarContainerStyle && avatarContainerStyle,\n    overlayContainerStyle: avatarOverlayContainerStyle && avatarOverlayContainerStyle,\n    rounded: roundAvatar,\n    source: avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }), React.createElement(View, {\n    style: styles.titleSubtitleContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: titleContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, title !== null && (typeof title === 'string' || typeof title === 'number') ? React.createElement(Text, {\n    numberOfLines: titleNumberOfLines,\n    style: [styles.title, !leftIcon && {\n      marginLeft: 10\n    }, titleStyle && titleStyle, fontFamily && {\n      fontFamily: fontFamily\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, title) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, title)), React.createElement(View, {\n    style: subtitleContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, subtitle !== null && (typeof subtitle === 'string' || typeof subtitle === 'number') ? React.createElement(Text, {\n    numberOfLines: subtitleNumberOfLines,\n    style: [styles.subtitle, !leftIcon && {\n      marginLeft: 10\n    }, subtitleStyle && subtitleStyle, fontFamily && {\n      fontFamily: fontFamily\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, subtitle) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, subtitle))), rightTitle && rightTitle !== '' && !textInput && React.createElement(View, {\n    style: [styles.rightTitleContainer, rightTitleContainerStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    numberOfLines: rightTitleNumberOfLines,\n    style: [styles.rightTitleStyle, rightTitleStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, rightTitle)), textInput && React.createElement(View, {\n    style: [styles.rightTitleContainer, styles.textInputContainerStyle, textInputContainerStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: [styles.textInputStyle, textInputStyle],\n    underlineColorAndroid: 'transparent',\n    defaultValue: rightTitle,\n    value: textInputValue,\n    placeholder: textInputPlaceholder,\n    autoCapitalize: textInputAutoCapitalize,\n    autoCorrect: textInputAutoCorrect,\n    autoFocus: textInputAutoFocus,\n    editable: disabled ? false : textInputEditable,\n    keyboardType: textInputKeyboardType,\n    maxLength: textInputMaxLength,\n    multiline: textInputMultiline,\n    onChangeText: textInputOnChangeText,\n    onFocus: textInputOnFocus,\n    onBlur: textInputOnBlur,\n    secureTextEntry: textInputSecure,\n    selectTextOnFocus: textInputSelectTextOnFocus,\n    returnKeyType: textInputReturnKeyType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  })), badge && !rightTitle && React.createElement(Badge, _extends({}, badge, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 34\n    }\n  })), !hideChevron && (React.isValidElement(rightIcon) ? rightIcon : React.createElement(TouchableOpacity, {\n    onPress: onPressRightIcon,\n    disabled: disabled ? disabled : !onPressRightIcon,\n    style: styles.chevronContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    type: rightIcon.type,\n    iconStyle: rightIcon.style,\n    size: 28,\n    name: rightIcon.name || 'chevron-right',\n    color: rightIcon.color || chevronColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }))), switchButton && hideChevron && React.createElement(View, {\n    style: styles.switchContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, React.createElement(Switch, {\n    onValueChange: onSwitch,\n    disabled: disabled ? disabled : switchDisabled,\n    onTintColor: switchOnTintColor,\n    thumbTintColor: switchThumbTintColor,\n    tintColor: switchTintColor,\n    value: switched,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  })), label && label));\n};\n\nListItem.defaultProps = {\n  underlayColor: 'white',\n  leftIconUnderlayColor: 'white',\n  chevronColor: colors.grey4,\n  rightIcon: {\n    name: 'chevron-right'\n  },\n  hideChevron: false,\n  roundAvatar: false,\n  switchButton: false,\n  textInputEditable: true,\n  titleNumberOfLines: 1,\n  subtitleNumberOfLines: 1,\n  rightTitleNumberOfLines: 1,\n  disabled: false\n};\nListItem.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n  avatar: PropTypes.any,\n  icon: PropTypes.any,\n  onPress: PropTypes.func,\n  rightIcon: PropTypes.oneOfType([PropTypes.element, PropTypes.object]),\n  underlayColor: PropTypes.string,\n  subtitle: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n  subtitleStyle: PropTypes.any,\n  subtitleNumberOfLines: PropTypes.number,\n  containerStyle: PropTypes.any,\n  wrapperStyle: PropTypes.any,\n  titleStyle: PropTypes.any,\n  titleContainerStyle: PropTypes.any,\n  titleNumberOfLines: PropTypes.number,\n  hideChevron: PropTypes.bool,\n  chevronColor: PropTypes.string,\n  roundAvatar: PropTypes.bool,\n  badge: PropTypes.any,\n  switchButton: PropTypes.bool,\n  onSwitch: PropTypes.func,\n  switchDisabled: PropTypes.bool,\n  switchOnTintColor: PropTypes.string,\n  switchThumbTintColor: PropTypes.string,\n  switchTintColor: PropTypes.string,\n  switched: PropTypes.bool,\n  textInput: PropTypes.bool,\n  textInputAutoCapitalize: PropTypes.oneOf(['none', 'sentences', 'words', 'characters']),\n  textInputAutoCorrect: PropTypes.bool,\n  textInputAutoFocus: PropTypes.bool,\n  textInputEditable: PropTypes.bool,\n  textInputKeyboardType: PropTypes.oneOf(['default', 'email-address', 'numeric', 'phone-pad', 'ascii-capable', 'numbers-and-punctuation', 'url', 'number-pad', 'name-phone-pad', 'decimal-pad', 'twitter', 'web-search']),\n  textInputMaxLength: PropTypes.number,\n  textInputMultiline: PropTypes.bool,\n  textInputOnChangeText: PropTypes.func,\n  textInputOnFocus: PropTypes.func,\n  textInputOnBlur: PropTypes.func,\n  textInputSelectTextOnFocus: PropTypes.bool,\n  textInputReturnKeyType: PropTypes.string,\n  textInputValue: PropTypes.string,\n  textInputSecure: PropTypes.bool,\n  textInputStyle: PropTypes.any,\n  textInputContainerStyle: PropTypes.any,\n  textInputPlaceholder: PropTypes.string,\n  component: PropTypes.any,\n  fontFamily: PropTypes.string,\n  rightTitle: PropTypes.string,\n  rightTitleContainerStyle: ViewPropTypes.style,\n  rightTitleStyle: Text.propTypes.style,\n  rightTitleNumberOfLines: PropTypes.number,\n  subtitleContainerStyle: ViewPropTypes.style,\n  label: PropTypes.any,\n  onLongPress: PropTypes.func,\n  leftIcon: PropTypes.oneOfType([PropTypes.element, PropTypes.object]),\n  leftIconOnPress: PropTypes.func,\n  leftIconOnLongPress: PropTypes.func,\n  leftIconUnderlayColor: PropTypes.string,\n  leftIconContainerStyle: ViewPropTypes.style,\n  avatarStyle: Image.propTypes.style,\n  avatarContainerStyle: ViewPropTypes.style,\n  avatarOverlayContainerStyle: ViewPropTypes.style,\n  onPressRightIcon: PropTypes.func,\n  disabled: PropTypes.bool,\n  disabledStyle: ViewPropTypes.style\n};\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 10,\n    paddingRight: 10,\n    paddingBottom: 10,\n    borderBottomColor: colors.greyOutline,\n    borderBottomWidth: 1,\n    backgroundColor: 'transparent'\n  },\n  wrapper: {\n    flexDirection: 'row',\n    marginLeft: 10,\n    alignItems: 'center'\n  },\n  iconStyle: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  icon: {\n    marginRight: 8\n  },\n  title: {\n    fontSize: normalize(14),\n    color: colors.grey1\n  },\n  subtitle: _objectSpread({\n    color: colors.grey3,\n    fontSize: normalize(12),\n    marginTop: 1\n  }, Platform.select({\n    ios: {\n      fontWeight: '600'\n    },\n    android: _objectSpread({}, fonts.android.bold)\n  })),\n  titleSubtitleContainer: {\n    justifyContent: 'center',\n    flex: 1\n  },\n  chevronContainer: {\n    alignItems: 'flex-end',\n    justifyContent: 'center'\n  },\n  switchContainer: {\n    alignItems: 'flex-end',\n    justifyContent: 'center',\n    marginRight: 5\n  },\n  rightTitleContainer: {\n    flex: 1,\n    alignItems: 'flex-end',\n    justifyContent: 'center'\n  },\n  rightTitleStyle: {\n    marginRight: 5,\n    color: colors.grey4\n  },\n  textInputContainerStyle: {\n    alignItems: null\n  },\n  textInputStyle: {\n    height: 20,\n    flex: 1,\n    textAlign: 'right'\n  },\n  disabled: {\n    opacity: 0.5\n  }\n});\nexport default ListItem;","map":{"version":3,"sources":["/Users/hassao03/code/node_modules/react-native-elements/src/list/ListItem.js"],"names":["PropTypes","React","Avatar","Badge","Icon","Text","colors","fonts","normalize","ViewPropTypes","ListItem","props","onPress","title","leftIcon","rightIcon","leftIconOnPress","leftIconOnLongPress","leftIconUnderlayColor","leftIconContainerStyle","avatarStyle","avatarContainerStyle","avatarOverlayContainerStyle","underlayColor","subtitle","subtitleStyle","containerStyle","wrapperStyle","titleNumberOfLines","titleStyle","titleContainerStyle","hideChevron","chevronColor","roundAvatar","component","fontFamily","rightTitle","rightTitleContainerStyle","rightTitleStyle","rightTitleNumberOfLines","subtitleContainerStyle","subtitleNumberOfLines","badge","label","onLongPress","switchButton","onSwitch","switchDisabled","switchOnTintColor","switchThumbTintColor","switchTintColor","switched","textInput","textInputAutoCapitalize","textInputAutoCorrect","textInputAutoFocus","textInputEditable","textInputKeyboardType","textInputMaxLength","textInputMultiline","textInputOnChangeText","textInputOnFocus","textInputOnBlur","textInputSelectTextOnFocus","textInputReturnKeyType","textInputValue","textInputSecure","textInputStyle","textInputContainerStyle","textInputPlaceholder","onPressRightIcon","disabled","disabledStyle","attributes","avatar","Component","TouchableHighlight","View","LeftIconWrapper","uri","styles","container","wrapper","isValidElement","name","iconStyle","type","icon","style","color","grey4","size","titleSubtitleContainer","marginLeft","rightTitleContainer","chevronContainer","switchContainer","defaultProps","propTypes","oneOfType","string","number","object","any","func","element","bool","oneOf","Image","StyleSheet","create","paddingTop","paddingRight","paddingBottom","borderBottomColor","greyOutline","borderBottomWidth","backgroundColor","flexDirection","alignItems","justifyContent","marginRight","fontSize","grey1","grey3","marginTop","Platform","select","ios","fontWeight","android","bold","flex","height","textAlign","opacity"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  View,\n  StyleSheet,\n  TouchableHighlight,\n  TouchableOpacity,\n  Platform,\n  Switch,\n  Image,\n  TextInput,\n} from 'react-native';\nimport Avatar from '../avatar/Avatar';\nimport Badge from '../badge/badge';\nimport Icon from '../icons/Icon';\nimport Text from '../text/Text';\nimport colors from '../config/colors';\nimport fonts from '../config/fonts';\nimport normalize from '../helpers/normalizeText';\nimport ViewPropTypes from '../config/ViewPropTypes';\n\nconst ListItem = props => {\n  const {\n    onPress,\n    title,\n    leftIcon,\n    rightIcon,\n    leftIconOnPress,\n    leftIconOnLongPress,\n    leftIconUnderlayColor,\n    leftIconContainerStyle,\n    avatarStyle,\n    avatarContainerStyle,\n    avatarOverlayContainerStyle,\n    underlayColor,\n    subtitle,\n    subtitleStyle,\n    containerStyle,\n    wrapperStyle,\n    titleNumberOfLines,\n    titleStyle,\n    titleContainerStyle,\n    hideChevron,\n    chevronColor,\n    roundAvatar,\n    component,\n    fontFamily,\n    rightTitle,\n    rightTitleContainerStyle,\n    rightTitleStyle,\n    rightTitleNumberOfLines,\n    subtitleContainerStyle,\n    subtitleNumberOfLines,\n    badge,\n    label,\n    onLongPress,\n    switchButton,\n    onSwitch,\n    switchDisabled,\n    switchOnTintColor,\n    switchThumbTintColor,\n    switchTintColor,\n    switched,\n    textInput,\n    textInputAutoCapitalize,\n    textInputAutoCorrect,\n    textInputAutoFocus,\n    textInputEditable,\n    textInputKeyboardType,\n    textInputMaxLength,\n    textInputMultiline,\n    textInputOnChangeText,\n    textInputOnFocus,\n    textInputOnBlur,\n    textInputSelectTextOnFocus,\n    textInputReturnKeyType,\n    textInputValue,\n    textInputSecure,\n    textInputStyle,\n    textInputContainerStyle,\n    textInputPlaceholder,\n    onPressRightIcon,\n    disabled,\n    disabledStyle,\n    ...attributes\n  } = props;\n\n  let { avatar } = props;\n\n  let Component = onPress || onLongPress ? TouchableHighlight : View;\n  let LeftIconWrapper =\n    leftIconOnPress || leftIconOnLongPress ? TouchableHighlight : View;\n  if (component) {\n    Component = component;\n  }\n  if (typeof avatar === 'string') {\n    avatar = { uri: avatar };\n  }\n  return (\n    <Component\n      {...attributes}\n      onLongPress={onLongPress}\n      onPress={onPress}\n      disabled={disabled}\n      underlayColor={underlayColor}\n      style={[\n        styles.container,\n        containerStyle && containerStyle,\n        disabled && styles.disabled,\n        disabled && disabledStyle && disabledStyle,\n      ]}\n    >\n      <View style={[styles.wrapper, wrapperStyle && wrapperStyle]}>\n        {React.isValidElement(leftIcon)\n          ? leftIcon\n          : leftIcon &&\n            leftIcon.name && (\n              <LeftIconWrapper\n                onLongPress={leftIconOnLongPress}\n                onPress={leftIconOnPress}\n                disabled={disabled}\n                underlayColor={leftIconUnderlayColor}\n                style={[\n                  styles.iconStyle,\n                  leftIconContainerStyle && leftIconContainerStyle,\n                ]}\n              >\n                <View>\n                  <Icon\n                    type={leftIcon.type}\n                    iconStyle={[styles.icon, leftIcon.style && leftIcon.style]}\n                    name={leftIcon.name}\n                    color={leftIcon.color || colors.grey4}\n                    size={leftIcon.size || 24}\n                  />\n                </View>\n              </LeftIconWrapper>\n            )}\n        {avatar && React.isValidElement(avatar)\n          ? avatar\n          : avatar &&\n            !React.isValidElement(avatar) && (\n              <Avatar\n                avatarStyle={avatarStyle && avatarStyle}\n                containerStyle={avatarContainerStyle && avatarContainerStyle}\n                overlayContainerStyle={\n                  avatarOverlayContainerStyle && avatarOverlayContainerStyle\n                }\n                rounded={roundAvatar}\n                source={avatar}\n              />\n            )}\n        <View style={styles.titleSubtitleContainer}>\n          <View style={titleContainerStyle}>\n            {title !== null &&\n            (typeof title === 'string' || typeof title === 'number') ? (\n              <Text\n                numberOfLines={titleNumberOfLines}\n                style={[\n                  styles.title,\n                  !leftIcon && { marginLeft: 10 },\n                  titleStyle && titleStyle,\n                  fontFamily && { fontFamily },\n                ]}\n              >\n                {title}\n              </Text>\n            ) : (\n              <View>{title}</View>\n            )}\n          </View>\n          <View style={subtitleContainerStyle}>\n            {subtitle !== null &&\n            (typeof subtitle === 'string' || typeof subtitle === 'number') ? (\n              <Text\n                numberOfLines={subtitleNumberOfLines}\n                style={[\n                  styles.subtitle,\n                  !leftIcon && { marginLeft: 10 },\n                  subtitleStyle && subtitleStyle,\n                  fontFamily && { fontFamily },\n                ]}\n              >\n                {subtitle}\n              </Text>\n            ) : (\n              <View>{subtitle}</View>\n            )}\n          </View>\n        </View>\n        {rightTitle &&\n          rightTitle !== '' &&\n          !textInput && (\n            <View\n              style={[styles.rightTitleContainer, rightTitleContainerStyle]}\n            >\n              <Text\n                numberOfLines={rightTitleNumberOfLines}\n                style={[styles.rightTitleStyle, rightTitleStyle]}\n              >\n                {rightTitle}\n              </Text>\n            </View>\n          )}\n        {textInput && (\n          <View\n            style={[\n              styles.rightTitleContainer,\n              styles.textInputContainerStyle,\n              textInputContainerStyle,\n            ]}\n          >\n            <TextInput\n              style={[styles.textInputStyle, textInputStyle]}\n              underlineColorAndroid={'transparent'}\n              defaultValue={rightTitle}\n              value={textInputValue}\n              placeholder={textInputPlaceholder}\n              autoCapitalize={textInputAutoCapitalize}\n              autoCorrect={textInputAutoCorrect}\n              autoFocus={textInputAutoFocus}\n              editable={disabled ? false : textInputEditable}\n              keyboardType={textInputKeyboardType}\n              maxLength={textInputMaxLength}\n              multiline={textInputMultiline}\n              onChangeText={textInputOnChangeText}\n              onFocus={textInputOnFocus}\n              onBlur={textInputOnBlur}\n              secureTextEntry={textInputSecure}\n              selectTextOnFocus={textInputSelectTextOnFocus}\n              returnKeyType={textInputReturnKeyType}\n            />\n          </View>\n        )}\n        {badge && !rightTitle && <Badge {...badge} />}\n        {!hideChevron &&\n          (React.isValidElement(rightIcon) ? (\n            rightIcon\n          ) : (\n            <TouchableOpacity\n              onPress={onPressRightIcon}\n              disabled={disabled ? disabled : !onPressRightIcon}\n              style={styles.chevronContainer}\n            >\n              <Icon\n                type={rightIcon.type}\n                iconStyle={rightIcon.style}\n                size={28}\n                name={rightIcon.name || 'chevron-right'}\n                color={rightIcon.color || chevronColor}\n              />\n            </TouchableOpacity>\n          ))}\n        {switchButton &&\n          hideChevron && (\n            <View style={styles.switchContainer}>\n              <Switch\n                onValueChange={onSwitch}\n                disabled={disabled ? disabled : switchDisabled}\n                onTintColor={switchOnTintColor}\n                thumbTintColor={switchThumbTintColor}\n                tintColor={switchTintColor}\n                value={switched}\n              />\n            </View>\n          )}\n        {label && label}\n      </View>\n    </Component>\n  );\n};\n\nListItem.defaultProps = {\n  underlayColor: 'white',\n  leftIconUnderlayColor: 'white',\n  chevronColor: colors.grey4,\n  rightIcon: { name: 'chevron-right' },\n  hideChevron: false,\n  roundAvatar: false,\n  switchButton: false,\n  textInputEditable: true,\n  titleNumberOfLines: 1,\n  subtitleNumberOfLines: 1,\n  rightTitleNumberOfLines: 1,\n  disabled: false,\n};\n\nListItem.propTypes = {\n  title: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object,\n  ]),\n  avatar: PropTypes.any,\n  icon: PropTypes.any,\n  onPress: PropTypes.func,\n  rightIcon: PropTypes.oneOfType([PropTypes.element, PropTypes.object]),\n  underlayColor: PropTypes.string,\n  subtitle: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object,\n  ]),\n  subtitleStyle: PropTypes.any,\n  subtitleNumberOfLines: PropTypes.number,\n  containerStyle: PropTypes.any,\n  wrapperStyle: PropTypes.any,\n  titleStyle: PropTypes.any,\n  titleContainerStyle: PropTypes.any,\n  titleNumberOfLines: PropTypes.number,\n  hideChevron: PropTypes.bool,\n  chevronColor: PropTypes.string,\n  roundAvatar: PropTypes.bool,\n  badge: PropTypes.any,\n  switchButton: PropTypes.bool,\n  onSwitch: PropTypes.func,\n  switchDisabled: PropTypes.bool,\n  switchOnTintColor: PropTypes.string,\n  switchThumbTintColor: PropTypes.string,\n  switchTintColor: PropTypes.string,\n  switched: PropTypes.bool,\n  textInput: PropTypes.bool,\n  textInputAutoCapitalize: PropTypes.oneOf([\n    'none',\n    'sentences',\n    'words',\n    'characters',\n  ]),\n  textInputAutoCorrect: PropTypes.bool,\n  textInputAutoFocus: PropTypes.bool,\n  textInputEditable: PropTypes.bool,\n  textInputKeyboardType: PropTypes.oneOf([\n    'default',\n    'email-address',\n    'numeric',\n    'phone-pad',\n    'ascii-capable',\n    'numbers-and-punctuation',\n    'url',\n    'number-pad',\n    'name-phone-pad',\n    'decimal-pad',\n    'twitter',\n    'web-search',\n  ]),\n  textInputMaxLength: PropTypes.number,\n  textInputMultiline: PropTypes.bool,\n  textInputOnChangeText: PropTypes.func,\n  textInputOnFocus: PropTypes.func,\n  textInputOnBlur: PropTypes.func,\n  textInputSelectTextOnFocus: PropTypes.bool,\n  textInputReturnKeyType: PropTypes.string,\n  textInputValue: PropTypes.string,\n  textInputSecure: PropTypes.bool,\n  textInputStyle: PropTypes.any,\n  textInputContainerStyle: PropTypes.any,\n  textInputPlaceholder: PropTypes.string,\n  component: PropTypes.any,\n  fontFamily: PropTypes.string,\n  rightTitle: PropTypes.string,\n  rightTitleContainerStyle: ViewPropTypes.style,\n  rightTitleStyle: Text.propTypes.style,\n  rightTitleNumberOfLines: PropTypes.number,\n  subtitleContainerStyle: ViewPropTypes.style,\n  label: PropTypes.any,\n  onLongPress: PropTypes.func,\n  leftIcon: PropTypes.oneOfType([PropTypes.element, PropTypes.object]),\n  leftIconOnPress: PropTypes.func,\n  leftIconOnLongPress: PropTypes.func,\n  leftIconUnderlayColor: PropTypes.string,\n  leftIconContainerStyle: ViewPropTypes.style,\n  avatarStyle: Image.propTypes.style,\n  avatarContainerStyle: ViewPropTypes.style,\n  avatarOverlayContainerStyle: ViewPropTypes.style,\n  onPressRightIcon: PropTypes.func,\n  disabled: PropTypes.bool,\n  disabledStyle: ViewPropTypes.style,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 10,\n    paddingRight: 10,\n    paddingBottom: 10,\n    borderBottomColor: colors.greyOutline,\n    borderBottomWidth: 1,\n    backgroundColor: 'transparent',\n  },\n  wrapper: {\n    flexDirection: 'row',\n    marginLeft: 10,\n    alignItems: 'center',\n  },\n  iconStyle: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  icon: {\n    marginRight: 8,\n  },\n  title: {\n    fontSize: normalize(14),\n    color: colors.grey1,\n  },\n  subtitle: {\n    color: colors.grey3,\n    fontSize: normalize(12),\n    marginTop: 1,\n    ...Platform.select({\n      ios: {\n        fontWeight: '600',\n      },\n      android: {\n        ...fonts.android.bold,\n      },\n    }),\n  },\n  titleSubtitleContainer: {\n    justifyContent: 'center',\n    flex: 1,\n  },\n  chevronContainer: {\n    alignItems: 'flex-end',\n    justifyContent: 'center',\n  },\n  switchContainer: {\n    alignItems: 'flex-end',\n    justifyContent: 'center',\n    marginRight: 5,\n  },\n  rightTitleContainer: {\n    flex: 1,\n    alignItems: 'flex-end',\n    justifyContent: 'center',\n  },\n  rightTitleStyle: {\n    marginRight: 5,\n    color: colors.grey4,\n  },\n  textInputContainerStyle: {\n    alignItems: null,\n  },\n  textInputStyle: {\n    height: 20,\n    flex: 1,\n    textAlign: 'right',\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n});\n\nexport default ListItem;\n"]},"metadata":{},"sourceType":"module"}