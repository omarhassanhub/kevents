{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/hassao03/code/src/screens/HomeScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { Container, Header, Body, Button, Text, Title, Content, Left, Right, Icon, Spinner } from 'native-base';\nimport { SwipeListView } from 'react-native-swipe-list-view';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport Auth from '@aws-amplify/auth';\nimport Analytics from '@aws-amplify/analytics';\nimport { listEvents } from \"../graphql/queries\";\nimport { deleteEvent } from \"../graphql/mutations\";\nimport EventBox from \"../components/EventBox\";\nimport { updateDatabaseUser } from \"../utils/users\";\nexport default function (_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      events = _useState2[0],\n      setEvents = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refreshing = _useState4[0],\n      setRefreshing = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      user = _useState6[0],\n      setUser = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loaded = _useState8[0],\n      setLoaded = _useState8[1];\n\n  useEffect(function () {\n    var _route$params;\n\n    if ((_route$params = route.params) == null ? void 0 : _route$params.refreshList) {\n      setRefreshing(true);\n    }\n\n    authUser();\n    getAllEvents();\n  }, [route.params]);\n\n  function authUser() {\n    var cognitoUser;\n    return _regeneratorRuntime.async(function authUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n          case 2:\n            cognitoUser = _context.sent;\n\n            if (cognitoUser) {\n              setUser(cognitoUser);\n              updateDatabaseUser(cognitoUser.username, cognitoUser.attributes, loaded);\n              setLoaded(false);\n              Analytics.record({\n                name: 'loaded'\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getAllEvents() {\n    var filters, limit, allEvents;\n    return _regeneratorRuntime.async(function getAllEvents$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            filters = {\n              startAt: {\n                ge: parseInt(new Date().getTime() / 1000)\n              }\n            };\n            limit = 10;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(listEvents, filters, limit)));\n\n          case 4:\n            allEvents = _context2.sent;\n            setRefreshing(false);\n            setEvents(allEvents.data.listEvents.items.sort(function (a, b) {\n              return a.startAt === b.startAt ? 0 : a.startAt < b.startAt ? -1 : 1;\n            }));\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function deleteEventById(eventId) {\n    var details;\n    return _regeneratorRuntime.async(function deleteEventById$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setRefreshing(true);\n            Analytics.record({\n              name: 'deleteEvent',\n              attributes: {\n                eventId: eventId,\n                userId: user.attributes.sub\n              }\n            });\n            details = {\n              id: eventId\n            };\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(deleteEvent, {\n              input: details\n            })));\n\n          case 5:\n            getAllEvents();\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var renderEvents = function renderEvents() {\n    return React.createElement(SwipeListView, {\n      refreshControl: React.createElement(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        title: \"Loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }),\n      data: events,\n      renderItem: function renderItem(data, rowMap) {\n        return React.createElement(EventBox, {\n          currentUser: user,\n          isClickable: true,\n          key: data.item.id,\n          event: data.item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }\n        });\n      },\n      renderHiddenItem: function renderHiddenItem(data, dataMap) {\n        var disabledButton = function disabledButton() {\n          return React.createElement(Button, {\n            disabled: true,\n            bordered: true,\n            style: {\n              width: 100,\n              justifyContent: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }\n          }, \"Delete\"));\n        };\n\n        var enabledButton = function enabledButton() {\n          return React.createElement(Content, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 13\n            }\n          }, React.createElement(Button, {\n            danger: true,\n            style: {\n              width: 100,\n              justifyContent: 'center'\n            },\n            onPress: function onPress() {\n              return deleteEventById(data.item.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }\n          }, \"Delete\")), refreshing && React.createElement(Spinner, {\n            color: \"red\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 30\n            }\n          }));\n        };\n\n        var renderButton = function renderButton() {\n          if (data.item.user.username === user.username) return enabledButton();\n          return disabledButton();\n        };\n\n        return React.createElement(Content, {\n          style: {\n            alignSelf: 'flex-end',\n            padding: 10,\n            alignContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }\n        }, renderButton());\n      },\n      rightOpenValue: -125,\n      style: {\n        padding: 10\n      },\n      disableRightSwipe: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    getAllEvents();\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, React.createElement(Left, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }), React.createElement(Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, \"Home\")), React.createElement(Right, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    onPress: function onPress() {\n      return navigation.navigate('Create');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  })))), renderEvents(events));\n}","map":{"version":3,"sources":["/Users/hassao03/code/src/screens/HomeScreen.js"],"names":["React","useState","useEffect","Container","Header","Body","Button","Text","Title","Content","Left","Right","Icon","Spinner","SwipeListView","API","graphqlOperation","Auth","Analytics","listEvents","deleteEvent","EventBox","updateDatabaseUser","navigation","route","events","setEvents","refreshing","setRefreshing","user","setUser","loaded","setLoaded","params","refreshList","authUser","getAllEvents","currentAuthenticatedUser","cognitoUser","username","attributes","record","name","filters","startAt","ge","parseInt","Date","getTime","limit","graphql","allEvents","data","items","sort","a","b","deleteEventById","eventId","userId","sub","details","id","input","renderEvents","onRefresh","rowMap","item","dataMap","disabledButton","width","justifyContent","enabledButton","renderButton","alignSelf","padding","alignContent","navigate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { RefreshControl } from 'react-native';\nimport {\n  Container,\n  Header,\n  Body,\n  Button,\n  Text,\n  Title,\n  Content,\n  Left,\n  Right,\n  Icon,\n  Spinner,\n} from 'native-base';\nimport { SwipeListView } from 'react-native-swipe-list-view';\n\nimport { API, graphqlOperation } from 'aws-amplify';\nimport Auth from '@aws-amplify/auth';\nimport Analytics from '@aws-amplify/analytics';\nimport { listEvents } from '../graphql/queries';\nimport { deleteEvent } from '../graphql/mutations';\n\nimport EventBox from '../components/EventBox';\nimport { updateDatabaseUser } from '../utils/users';\n\nexport default function ({ navigation, route }) {\n  const [events, setEvents] = useState([]);\n  const [refreshing, setRefreshing] = useState(true);\n  const [user, setUser] = useState([]);\n  const [loaded, setLoaded] = useState(true);\n\n  useEffect(() => {\n    if (route.params?.refreshList) {\n      setRefreshing(true);\n    }\n    authUser();\n    getAllEvents();\n  }, [route.params]);\n\n  async function authUser() {\n    const cognitoUser = await Auth.currentAuthenticatedUser();\n    if (cognitoUser) {\n      setUser(cognitoUser);\n      updateDatabaseUser(cognitoUser.username, cognitoUser.attributes, loaded);\n      setLoaded(false);\n      Analytics.record({\n        name: 'loaded',\n      });\n    }\n  }\n\n  async function getAllEvents() {\n    const filters = {\n      startAt: {\n        ge: parseInt(new Date().getTime() / 1000),\n      },\n    };\n\n    const limit = 10;\n    const allEvents = await API.graphql(\n      graphqlOperation(listEvents, filters, limit)\n    );\n    setRefreshing(false);\n    setEvents(\n      allEvents.data.listEvents.items.sort(function (a, b) {\n        return a.startAt === b.startAt ? 0 : a.startAt < b.startAt ? -1 : 1;\n      })\n    );\n  }\n\n  async function deleteEventById(eventId) {\n    setRefreshing(true);\n    Analytics.record({\n      name: 'deleteEvent',\n      attributes: {\n        eventId: eventId,\n        userId: user.attributes.sub,\n      },\n    });\n    const details = {\n      id: eventId,\n    };\n    await API.graphql(graphqlOperation(deleteEvent, { input: details }));\n    getAllEvents();\n  }\n\n  const renderEvents = () => {\n    return (\n      <SwipeListView\n        refreshControl={\n          <RefreshControl\n            refreshing={refreshing}\n            onRefresh={onRefresh}\n            title='Loading'\n          />\n        }\n        data={events}\n        renderItem={(data, rowMap) => (\n          <EventBox\n            currentUser={user}\n            isClickable={true}\n            key={data.item.id}\n            event={data.item}\n          />\n        )}\n        renderHiddenItem={(data, dataMap) => {\n          const disabledButton = () => (\n            <Button\n              disabled\n              bordered\n              style={{ width: 100, justifyContent: 'center' }}\n            >\n              <Text>Delete</Text>\n            </Button>\n          );\n          const enabledButton = () => (\n            <Content>\n              <Button\n                danger\n                style={{ width: 100, justifyContent: 'center' }}\n                onPress={() => deleteEventById(data.item.id)}\n              >\n                <Text>Delete</Text>\n              </Button>\n              {refreshing && <Spinner color='red' />}\n            </Content>\n          );\n          const renderButton = () => {\n            if (data.item.user.username === user.username)\n              return enabledButton();\n            return disabledButton();\n          };\n          return (\n            <Content\n              style={{\n                alignSelf: 'flex-end',\n                padding: 10,\n                alignContent: 'center',\n              }}\n            >\n              {renderButton()}\n            </Content>\n          );\n        }}\n        rightOpenValue={-125}\n        style={{ padding: 10 }}\n        disableRightSwipe={true}\n      />\n    );\n  };\n\n  const onRefresh = () => {\n    setRefreshing(true);\n    getAllEvents();\n  };\n\n  return (\n    <Container>\n      <Header>\n        <Left />\n        <Body>\n          <Title>Home</Title>\n        </Body>\n        <Right>\n          <Button transparent onPress={() => navigation.navigate('Create')}>\n            <Icon name='add'></Icon>\n          </Button>\n        </Right>\n      </Header>\n      {renderEvents(events)}\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}