{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/hassao03/code/src/screens/EventScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Container, Body, Content, Button, Text, Icon, Card, CardItem, Left, Right, List, ListItem, Header, Title } from 'native-base';\nimport { API, graphqlOperation, Auth } from 'aws-amplify';\nimport { createFollower, deleteFollower } from \"../graphql/mutations\";\nimport EventBox from \"../components/EventBox\";\nexport default function EventScreen(props) {\n  var event = props.route.params.event;\n  var navigation = props.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      followers = _useState4[0],\n      setFollowers = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      follower = _useState6[0],\n      setFollower = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pending = _useState8[0],\n      setPending = _useState8[1];\n\n  function authUser() {\n    var cognitoUser;\n    return _regeneratorRuntime.async(function authUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n          case 2:\n            cognitoUser = _context.sent;\n\n            if (cognitoUser) {\n              setCurrentUser(cognitoUser);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var getFollowersQuery = \"query GetEvent(\\n    $id: ID!\\n    $nextToken: String\\n    $limit: Int\\n  ) {\\n    getEvent(id: $id) {\\n      id\\n      followers (\\n        limit: $limit\\n        sortDirection: DESC\\n        nextToken: $nextToken\\n      ) {\\n        items  {\\n          id\\n          user {\\n            id\\n            name\\n            username\\n          }\\n        }\\n        nextToken\\n      }\\n    }\\n  }\\n  \";\n\n  renderFollowers = function renderFollowers() {\n    if (followers.length > 0) return followers.map(function (follower) {\n      return React.createElement(ListItem, {\n        key: follower.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, follower.user.name !== 'undefined undefined' ? follower.user.name + '(@' + follower.user.username + ')' : '@' + follower.user.username));\n    });\n    return React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \"No one yet\"));\n  };\n\n  renderActionButton = function renderActionButton() {\n    if (follower.length !== 0) {\n      return React.createElement(Card, {\n        transparent: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, React.createElement(CardItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, React.createElement(Left, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }), React.createElement(Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, React.createElement(Button, {\n        danger: true,\n        bordered: true,\n        onPress: function onPress() {\n          return leaveEvent(follower);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, \"Leave\"))), React.createElement(Right, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      })));\n    }\n\n    return React.createElement(Card, {\n      transparent: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, React.createElement(CardItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, React.createElement(Left, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }), React.createElement(Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, React.createElement(Button, {\n      bordered: true,\n      onPress: function onPress() {\n        return joinEvent(event, currentUser);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, \"Join Event\"))), React.createElement(Right, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  joinEvent = function joinEvent(event, currentUser) {\n    if (!pending) {\n      createNewFollower = function createNewFollower() {\n        var input, result, newFollower;\n        return _regeneratorRuntime.async(function createNewFollower$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                input = {\n                  input: {\n                    followerUserId: currentUser.attributes.sub,\n                    followerEventId: event.id\n                  }\n                };\n                result = null;\n                _context2.prev = 2;\n                _context2.next = 5;\n                return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createFollower, input)));\n\n              case 5:\n                result = _context2.sent;\n                newFollower = result.data.createFollower;\n                followers.push(newFollower);\n                setFollower(newFollower);\n                setFollowers(followers);\n                _context2.next = 15;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.log(_context2.t0);\n\n              case 15:\n                setPending(false);\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[2, 12]], Promise);\n      };\n\n      setPending(true);\n      createNewFollower();\n    }\n  };\n\n  getAllFollowers = function getAllFollowers(eventId) {\n    var input = {\n      id: eventId,\n      nextToken: null,\n      limit: 10\n    };\n    useEffect(function () {\n      var fetchFollowers = function fetchFollowers() {\n        return _regeneratorRuntime.async(function fetchFollowers$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(getFollowersQuery, input)));\n\n              case 2:\n                result = _context3.sent;\n                setFollowers(result.data.getEvent.followers.items);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      fetchFollowers();\n    }, [setFollowers]);\n  };\n\n  leaveEvent = function leaveEvent(follower) {\n    if (!pending) {\n      deleteExistingFollower = function deleteExistingFollower() {\n        var input, result, newFollowers;\n        return _regeneratorRuntime.async(function deleteExistingFollower$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                input = {\n                  input: {\n                    id: follower.id\n                  }\n                };\n                result = null;\n                _context4.prev = 2;\n                _context4.next = 5;\n                return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(deleteFollower, input)));\n\n              case 5:\n                result = _context4.sent;\n                newFollowers = followers.filter(function (item, index, arr) {\n                  return item.id !== follower.id;\n                });\n                setFollowers(newFollowers);\n                setFollower([]);\n                _context4.next = 14;\n                break;\n\n              case 11:\n                _context4.prev = 11;\n                _context4.t0 = _context4[\"catch\"](2);\n                console.log(_context4.t0);\n\n              case 14:\n                setPending(false);\n                return _context4.abrupt(\"return\", result.data);\n\n              case 16:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, null, [[2, 11]], Promise);\n      };\n\n      setPending(true);\n      deleteExistingFollower();\n    }\n  };\n\n  getAllFollowers(event.id);\n  useEffect(function () {\n    authUser();\n\n    if (followers.length > 0) {\n      var findFollower = followers.find(function (element) {\n        return element.user.id === currentUser.attributes.sub;\n      });\n      if (findFollower) setFollower(findFollower);\n    }\n  }, [followers]);\n\n  var enterChatRoom = function enterChatRoom(props) {\n    var event = props.event,\n        currentUser = props.currentUser;\n    navigation.navigate('Chat', {\n      event: event,\n      currentUser: currentUser\n    });\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, React.createElement(Left, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"ios-arrow-back\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, \"Back\"))), React.createElement(Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, \"Event Details\")), React.createElement(Right, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    onPress: function onPress() {\n      return enterChatRoom(props.route.params);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"chatbubbles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  })))), React.createElement(Content, {\n    padder: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }\n  }, React.createElement(EventBox, {\n    isClickable: false,\n    event: event,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, React.createElement(ListItem, {\n    itemHeader: true,\n    first: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, \"Who's coming\")), renderFollowers(followers)), renderActionButton()));\n}","map":{"version":3,"sources":["/Users/hassao03/code/src/screens/EventScreen.js"],"names":["React","useEffect","useState","Container","Body","Content","Button","Text","Icon","Card","CardItem","Left","Right","List","ListItem","Header","Title","API","graphqlOperation","Auth","createFollower","deleteFollower","EventBox","EventScreen","props","event","route","params","navigation","currentUser","setCurrentUser","followers","setFollowers","follower","setFollower","pending","setPending","authUser","currentAuthenticatedUser","cognitoUser","getFollowersQuery","renderFollowers","length","map","id","user","name","username","renderActionButton","leaveEvent","joinEvent","createNewFollower","input","followerUserId","attributes","sub","followerEventId","result","graphql","newFollower","data","push","console","log","getAllFollowers","eventId","nextToken","limit","fetchFollowers","getEvent","items","deleteExistingFollower","newFollowers","filter","item","index","arr","findFollower","find","element","enterChatRoom","navigate","goBack"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Container,\n  Body,\n  Content,\n  Button,\n  Text,\n  Icon,\n  Card,\n  CardItem,\n  Left,\n  Right,\n  List,\n  ListItem,\n  Header,\n  Title,\n} from 'native-base';\n\nimport { API, graphqlOperation, Auth } from 'aws-amplify';\nimport { createFollower, deleteFollower } from '../graphql/mutations';\n\nimport EventBox from '../components/EventBox';\n\nexport default function EventScreen(props) {\n  let { event } = props.route.params;\n  let { navigation } = props;\n  let [currentUser, setCurrentUser] = useState([]);\n  let [followers, setFollowers] = useState([]);\n  let [follower, setFollower] = useState([]);\n  let [pending, setPending] = useState(false);\n\n  async function authUser() {\n    const cognitoUser = await Auth.currentAuthenticatedUser();\n    if (cognitoUser) {\n      setCurrentUser(cognitoUser);\n    }\n  }\n\n  // TODO: workshop, insert your graphql query here to get all followers\n  const getFollowersQuery = `query GetEvent(\n    $id: ID!\n    $nextToken: String\n    $limit: Int\n  ) {\n    getEvent(id: $id) {\n      id\n      followers (\n        limit: $limit\n        sortDirection: DESC\n        nextToken: $nextToken\n      ) {\n        items  {\n          id\n          user {\n            id\n            name\n            username\n          }\n        }\n        nextToken\n      }\n    }\n  }\n  `;\n\n  renderFollowers = () => {\n    if (followers.length > 0)\n      return followers.map((follower) => (\n        <ListItem key={follower.id}>\n          <Text>\n            {follower.user.name !== 'undefined undefined'\n              ? follower.user.name + '(@' + follower.user.username + ')'\n              : '@' + follower.user.username}\n          </Text>\n        </ListItem>\n      ));\n    return (\n      <ListItem>\n        <Text>No one yet</Text>\n      </ListItem>\n    );\n  };\n\n  renderActionButton = () => {\n    if (follower.length !== 0) {\n      return (\n        <Card transparent>\n          <CardItem>\n            <Left />\n            <Body>\n              <Button danger bordered onPress={() => leaveEvent(follower)}>\n                <Text>Leave</Text>\n              </Button>\n            </Body>\n            <Right />\n          </CardItem>\n        </Card>\n      );\n    }\n    return (\n      <Card transparent>\n        <CardItem>\n          <Left />\n          <Body>\n            <Button bordered onPress={() => joinEvent(event, currentUser)}>\n              <Text>Join Event</Text>\n            </Button>\n          </Body>\n          <Right />\n        </CardItem>\n      </Card>\n    );\n  };\n\n  joinEvent = (event, currentUser) => {\n    if (!pending) {\n      createNewFollower = async () => {\n        const input = {\n          input: {\n            followerUserId: currentUser.attributes.sub,\n            followerEventId: event.id,\n          },\n        };\n\n        let result = null;\n        try {\n          result = await API.graphql(graphqlOperation(createFollower, input));\n          const newFollower = result.data.createFollower;\n          followers.push(newFollower);\n          setFollower(newFollower);\n          setFollowers(followers);\n        } catch (e) {\n          console.log(e);\n        }\n        setPending(false);\n      };\n      setPending(true);\n      createNewFollower();\n    }\n  };\n\n  getAllFollowers = (eventId) => {\n    const input = {\n      id: eventId,\n      nextToken: null,\n      limit: 10,\n    };\n    useEffect(() => {\n      const fetchFollowers = async () => {\n        result = await API.graphql(graphqlOperation(getFollowersQuery, input));\n        setFollowers(result.data.getEvent.followers.items);\n      };\n      fetchFollowers();\n    }, [setFollowers]);\n  };\n\n  leaveEvent = (follower) => {\n    if (!pending) {\n      deleteExistingFollower = async () => {\n        const input = {\n          input: {\n            id: follower.id,\n          },\n        };\n\n        let result = null;\n        try {\n          result = await API.graphql(graphqlOperation(deleteFollower, input));\n          var newFollowers = followers.filter(function (item, index, arr) {\n            return item.id !== follower.id;\n          });\n          setFollowers(newFollowers);\n          setFollower([]);\n        } catch (e) {\n          console.log(e);\n        }\n\n        setPending(false);\n        return result.data;\n      };\n\n      setPending(true);\n      deleteExistingFollower();\n    }\n  };\n\n  getAllFollowers(event.id);\n\n  useEffect(() => {\n    authUser();\n    if (followers.length > 0) {\n      const findFollower = followers.find(\n        (element) => element.user.id === currentUser.attributes.sub\n      );\n      if (findFollower) setFollower(findFollower);\n    }\n  }, [followers]);\n\n  const enterChatRoom = (props) => {\n    const { event, currentUser } = props;\n    navigation.navigate('Chat', { event, currentUser });\n  };\n\n  return (\n    <Container>\n      <Header>\n        <Left>\n          <Button transparent onPress={() => navigation.goBack()}>\n            <Icon name='ios-arrow-back'></Icon>\n            <Text>Back</Text>\n          </Button>\n        </Left>\n        <Body>\n          <Title>Event Details</Title>\n        </Body>\n        <Right>\n          <Button transparent onPress={() => enterChatRoom(props.route.params)}>\n            <Icon name='chatbubbles'></Icon>\n          </Button>\n        </Right>\n      </Header>\n      <Content padder>\n        <EventBox isClickable={false} event={event} />\n        <List>\n          <ListItem itemHeader first>\n            <Text>Who's coming</Text>\n          </ListItem>\n          {renderFollowers(followers)}\n        </List>\n        {renderActionButton()}\n      </Content>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}