{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/hassao03/code/node_modules/react-native-elements/src/pricing/PricingCard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"../text/Text\";\nimport fonts from \"../config/fonts\";\nimport colors from \"../config/colors\";\nimport Button from \"../buttons/Button\";\nimport normalize from \"../helpers/normalizeText\";\nimport ViewPropTypes from \"../config/ViewPropTypes\";\n\nvar PricingCard = function PricingCard(props) {\n  var containerStyle = props.containerStyle,\n      wrapperStyle = props.wrapperStyle,\n      title = props.title,\n      price = props.price,\n      info = props.info,\n      button = props.button,\n      color = props.color,\n      titleFont = props.titleFont,\n      pricingFont = props.pricingFont,\n      infoFont = props.infoFont,\n      buttonFont = props.buttonFont,\n      onButtonPress = props.onButtonPress,\n      attributes = _objectWithoutProperties(props, [\"containerStyle\", \"wrapperStyle\", \"title\", \"price\", \"info\", \"button\", \"color\", \"titleFont\", \"pricingFont\", \"infoFont\", \"buttonFont\", \"onButtonPress\"]);\n\n  return React.createElement(View, _extends({}, attributes, {\n    style: [styles.container, containerStyle && containerStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: [styles.wrapper, wrapperStyle && wrapperStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [styles.pricingTitle, {\n      color: color\n    }, titleFont && {\n      fontFamily: titleFont\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, title), React.createElement(Text, {\n    style: [styles.pricingPrice, pricingFont && {\n      fontFamily: pricingFont\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, price), info.map(function (item, i) {\n    return React.createElement(Text, {\n      key: i,\n      style: [styles.pricingInfo, infoFont && {\n        fontFamily: infoFont\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, item);\n  }), React.createElement(Button, {\n    icon: {\n      name: button.icon\n    },\n    buttonStyle: [styles.button, button.buttonStyle, {\n      backgroundColor: color\n    }],\n    fontFamily: buttonFont && buttonFont,\n    title: button.title,\n    onPress: onButtonPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n};\n\nPricingCard.propTypes = {\n  containerStyle: ViewPropTypes.style,\n  wrapperStyle: ViewPropTypes.style,\n  title: PropTypes.string,\n  price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  info: PropTypes.array,\n  button: PropTypes.object,\n  color: PropTypes.string,\n  onButtonPress: PropTypes.any,\n  titleFont: PropTypes.string,\n  pricingFont: PropTypes.string,\n  infoFont: PropTypes.string,\n  buttonFont: PropTypes.string\n};\nPricingCard.defaultProps = {\n  color: colors.primary\n};\nvar styles = StyleSheet.create({\n  container: _objectSpread({\n    margin: 15,\n    marginBottom: 15,\n    backgroundColor: 'white',\n    borderColor: colors.grey5,\n    borderWidth: 1,\n    padding: 15\n  }, Platform.select({\n    ios: {\n      shadowColor: 'rgba(0,0,0, .2)',\n      shadowOffset: {\n        height: 1,\n        width: 0\n      },\n      shadowOpacity: 0.5,\n      shadowRadius: 0.5\n    },\n    android: {\n      elevation: 1\n    }\n  })),\n  wrapper: {\n    backgroundColor: 'transparent'\n  },\n  pricingTitle: _objectSpread({\n    textAlign: 'center',\n    color: colors.primary,\n    fontSize: normalize(30)\n  }, Platform.select({\n    ios: {\n      fontWeight: '800'\n    },\n    android: _objectSpread({}, fonts.android.black)\n  })),\n  pricingPrice: _objectSpread({\n    textAlign: 'center',\n    marginTop: 10,\n    marginBottom: 10,\n    fontSize: normalize(40)\n  }, Platform.select({\n    ios: {\n      fontWeight: '700'\n    },\n    android: _objectSpread({}, fonts.android.bold)\n  })),\n  pricingInfo: _objectSpread({\n    textAlign: 'center',\n    marginTop: 5,\n    marginBottom: 5,\n    color: colors.grey3\n  }, Platform.select({\n    ios: {\n      fontWeight: '600'\n    },\n    android: _objectSpread({}, fonts.android.bold)\n  })),\n  button: {\n    marginTop: 15,\n    marginBottom: 10\n  }\n});\nexport default PricingCard;","map":{"version":3,"sources":["/Users/hassao03/code/node_modules/react-native-elements/src/pricing/PricingCard.js"],"names":["PropTypes","React","Text","fonts","colors","Button","normalize","ViewPropTypes","PricingCard","props","containerStyle","wrapperStyle","title","price","info","button","color","titleFont","pricingFont","infoFont","buttonFont","onButtonPress","attributes","styles","container","wrapper","pricingTitle","fontFamily","pricingPrice","map","item","i","pricingInfo","name","icon","buttonStyle","backgroundColor","propTypes","style","string","oneOfType","number","array","object","any","defaultProps","primary","StyleSheet","create","margin","marginBottom","borderColor","grey5","borderWidth","padding","Platform","select","ios","shadowColor","shadowOffset","height","width","shadowOpacity","shadowRadius","android","elevation","textAlign","fontSize","fontWeight","black","marginTop","bold","grey3"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport Text from '../text/Text';\nimport fonts from '../config/fonts';\nimport colors from '../config/colors';\nimport Button from '../buttons/Button';\nimport normalize from '../helpers/normalizeText';\nimport ViewPropTypes from '../config/ViewPropTypes';\n\nconst PricingCard = props => {\n  const {\n    containerStyle,\n    wrapperStyle,\n    title,\n    price,\n    info,\n    button,\n    color,\n    titleFont,\n    pricingFont,\n    infoFont,\n    buttonFont,\n    onButtonPress,\n    ...attributes\n  } = props;\n  return (\n    <View\n      {...attributes}\n      style={[styles.container, containerStyle && containerStyle]}\n    >\n      <View style={[styles.wrapper, wrapperStyle && wrapperStyle]}>\n        <Text\n          style={[\n            styles.pricingTitle,\n            { color },\n            titleFont && { fontFamily: titleFont },\n          ]}\n        >\n          {title}\n        </Text>\n        <Text\n          style={[\n            styles.pricingPrice,\n            pricingFont && { fontFamily: pricingFont },\n          ]}\n        >\n          {price}\n        </Text>\n        {info.map((item, i) => {\n          return (\n            <Text\n              key={i}\n              style={[styles.pricingInfo, infoFont && { fontFamily: infoFont }]}\n            >\n              {item}\n            </Text>\n          );\n        })}\n        <Button\n          icon={{ name: button.icon }}\n          buttonStyle={[\n            styles.button,\n            button.buttonStyle,\n            { backgroundColor: color },\n          ]}\n          fontFamily={buttonFont && buttonFont}\n          title={button.title}\n          onPress={onButtonPress}\n        />\n      </View>\n    </View>\n  );\n};\n\nPricingCard.propTypes = {\n  containerStyle: ViewPropTypes.style,\n  wrapperStyle: ViewPropTypes.style,\n  title: PropTypes.string,\n  price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  info: PropTypes.array,\n  button: PropTypes.object,\n  color: PropTypes.string,\n  onButtonPress: PropTypes.any,\n  titleFont: PropTypes.string,\n  pricingFont: PropTypes.string,\n  infoFont: PropTypes.string,\n  buttonFont: PropTypes.string,\n};\n\nPricingCard.defaultProps = {\n  color: colors.primary,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    margin: 15,\n    marginBottom: 15,\n    backgroundColor: 'white',\n    borderColor: colors.grey5,\n    borderWidth: 1,\n    padding: 15,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'rgba(0,0,0, .2)',\n        shadowOffset: { height: 1, width: 0 },\n        shadowOpacity: 0.5,\n        shadowRadius: 0.5,\n      },\n      android: {\n        elevation: 1,\n      },\n    }),\n  },\n  wrapper: {\n    backgroundColor: 'transparent',\n  },\n  pricingTitle: {\n    textAlign: 'center',\n    color: colors.primary,\n    fontSize: normalize(30),\n    ...Platform.select({\n      ios: {\n        fontWeight: '800',\n      },\n      android: {\n        ...fonts.android.black,\n      },\n    }),\n  },\n  pricingPrice: {\n    textAlign: 'center',\n    marginTop: 10,\n    marginBottom: 10,\n    fontSize: normalize(40),\n    ...Platform.select({\n      ios: {\n        fontWeight: '700',\n      },\n      android: {\n        ...fonts.android.bold,\n      },\n    }),\n  },\n  pricingInfo: {\n    textAlign: 'center',\n    marginTop: 5,\n    marginBottom: 5,\n    color: colors.grey3,\n    ...Platform.select({\n      ios: {\n        fontWeight: '600',\n      },\n      android: {\n        ...fonts.android.bold,\n      },\n    }),\n  },\n  button: {\n    marginTop: 15,\n    marginBottom: 10,\n  },\n});\n\nexport default PricingCard;\n"]},"metadata":{},"sourceType":"module"}