{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/hassao03/code/node_modules/react-native-elements/src/tile/Tile.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport NativeText from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"../text/Text\";\nimport Icon from \"../icons/Icon\";\nimport FeaturedTile from \"./FeaturedTile\";\nimport ViewPropTypes from \"../config/ViewPropTypes\";\nimport BackgroundImage from \"../config/BackgroundImage\";\n\nvar Tile = function Tile(props) {\n  var featured = props.featured,\n      imageSrc = props.imageSrc,\n      icon = props.icon,\n      title = props.title,\n      children = props.children,\n      caption = props.caption,\n      titleStyle = props.titleStyle,\n      onPress = props.onPress,\n      activeOpacity = props.activeOpacity,\n      overlayContainerStyle = props.overlayContainerStyle,\n      captionStyle = props.captionStyle,\n      iconContainerStyle = props.iconContainerStyle,\n      imageContainerStyle = props.imageContainerStyle,\n      containerStyle = props.containerStyle,\n      contentContainerStyle = props.contentContainerStyle,\n      titleNumberOfLines = props.titleNumberOfLines,\n      attributes = _objectWithoutProperties(props, [\"featured\", \"imageSrc\", \"icon\", \"title\", \"children\", \"caption\", \"titleStyle\", \"onPress\", \"activeOpacity\", \"overlayContainerStyle\", \"captionStyle\", \"iconContainerStyle\", \"imageContainerStyle\", \"containerStyle\", \"contentContainerStyle\", \"titleNumberOfLines\"]);\n\n  var width = props.width,\n      height = props.height;\n\n  if (!width) {\n    width = Dimensions.get('window').width;\n  }\n\n  if (!height) {\n    height = width * 0.8;\n  }\n\n  var styles = StyleSheet.create({\n    container: {\n      width: width,\n      height: height\n    },\n    imageContainer: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#ffffff',\n      flex: 2\n    },\n    text: {\n      backgroundColor: 'rgba(0,0,0,0)',\n      marginBottom: 5\n    },\n    contentContainer: {\n      paddingTop: 15,\n      paddingBottom: 5,\n      paddingLeft: 15,\n      paddingRight: 15\n    },\n    iconContainer: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignSelf: 'center'\n    }\n  });\n\n  if (featured) {\n    var featuredProps = {\n      title: title,\n      icon: icon,\n      caption: caption,\n      imageSrc: imageSrc,\n      onPress: onPress,\n      activeOpacity: activeOpacity,\n      containerStyle: containerStyle,\n      imageContainerStyle: imageContainerStyle,\n      overlayContainerStyle: overlayContainerStyle,\n      titleStyle: titleStyle,\n      captionStyle: captionStyle,\n      width: width,\n      height: height\n    };\n    return React.createElement(FeaturedTile, _extends({}, featuredProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  return React.createElement(TouchableOpacity, _extends({}, attributes, {\n    onPress: onPress,\n    style: [styles.container, containerStyle && containerStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }), React.createElement(BackgroundImage, {\n    source: imageSrc,\n    style: [styles.imageContainer, imageContainerStyle && imageContainerStyle],\n    resizeMode: \"cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [styles.iconContainer, iconContainerStyle && iconContainerStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, icon && React.createElement(Icon, _extends({}, icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 20\n    }\n  })))), React.createElement(View, {\n    style: [styles.contentContainer, contentContainerStyle && contentContainerStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    h4: true,\n    style: [styles.text, titleStyle && titleStyle],\n    numberOfLines: titleNumberOfLines,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, title), children));\n};\n\nTile.propTypes = {\n  title: PropTypes.string,\n  icon: PropTypes.object,\n  caption: PropTypes.string,\n  imageSrc: Image.propTypes.source,\n  onPress: PropTypes.func,\n  activeOpacity: PropTypes.number,\n  containerStyle: ViewPropTypes.style,\n  imageContainerStyle: ViewPropTypes.style,\n  iconContainerStyle: ViewPropTypes.style,\n  overlayContainerStyle: ViewPropTypes.style,\n  titleStyle: NativeText.propTypes.style,\n  captionStyle: NativeText.propTypes.style,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  featured: PropTypes.bool,\n  children: PropTypes.any,\n  contentContainerStyle: ViewPropTypes.style,\n  titleNumberOfLines: PropTypes.number\n};\nexport default Tile;","map":{"version":3,"sources":["/Users/hassao03/code/node_modules/react-native-elements/src/tile/Tile.js"],"names":["PropTypes","React","Text","Icon","FeaturedTile","ViewPropTypes","BackgroundImage","Tile","props","featured","imageSrc","icon","title","children","caption","titleStyle","onPress","activeOpacity","overlayContainerStyle","captionStyle","iconContainerStyle","imageContainerStyle","containerStyle","contentContainerStyle","titleNumberOfLines","attributes","width","height","Dimensions","get","styles","StyleSheet","create","container","imageContainer","alignItems","justifyContent","backgroundColor","flex","text","marginBottom","contentContainer","paddingTop","paddingBottom","paddingLeft","paddingRight","iconContainer","alignSelf","featuredProps","propTypes","string","object","Image","source","func","number","style","NativeText","bool","any"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  View,\n  Text as NativeText,\n  StyleSheet,\n  Dimensions,\n  Image,\n  TouchableOpacity,\n} from 'react-native';\nimport Text from '../text/Text';\nimport Icon from '../icons/Icon';\nimport FeaturedTile from './FeaturedTile';\nimport ViewPropTypes from '../config/ViewPropTypes';\nimport BackgroundImage from '../config/BackgroundImage';\n\nconst Tile = props => {\n  const {\n    featured,\n    imageSrc,\n    icon,\n    title,\n    children,\n    caption,\n    titleStyle,\n    onPress,\n    activeOpacity,\n    overlayContainerStyle,\n    captionStyle,\n    iconContainerStyle,\n    imageContainerStyle,\n    containerStyle,\n    contentContainerStyle,\n    titleNumberOfLines,\n    ...attributes\n  } = props;\n\n  let { width, height } = props;\n\n  if (!width) {\n    width = Dimensions.get('window').width;\n  }\n\n  if (!height) {\n    height = width * 0.8;\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      width,\n      height,\n    },\n    imageContainer: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#ffffff',\n      flex: 2,\n    },\n    text: {\n      backgroundColor: 'rgba(0,0,0,0)',\n      marginBottom: 5,\n    },\n    contentContainer: {\n      paddingTop: 15,\n      paddingBottom: 5,\n      paddingLeft: 15,\n      paddingRight: 15,\n    },\n    iconContainer: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignSelf: 'center',\n    },\n  });\n\n  if (featured) {\n    const featuredProps = {\n      title,\n      icon,\n      caption,\n      imageSrc,\n      onPress,\n      activeOpacity,\n      containerStyle,\n      imageContainerStyle,\n      overlayContainerStyle,\n      titleStyle,\n      captionStyle,\n      width,\n      height,\n    };\n    return <FeaturedTile {...featuredProps} />;\n  }\n\n  return (\n    <TouchableOpacity\n      {...attributes}\n      onPress={onPress}\n      style={[styles.container, containerStyle && containerStyle]}\n    >\n      <BackgroundImage\n        source={imageSrc}\n        style={[\n          styles.imageContainer,\n          imageContainerStyle && imageContainerStyle,\n        ]}\n        resizeMode=\"cover\"\n      >\n        <View\n          style={[\n            styles.iconContainer,\n            iconContainerStyle && iconContainerStyle,\n          ]}\n        >\n          {icon && <Icon {...icon} />}\n        </View>\n      </BackgroundImage>\n      <View\n        style={[\n          styles.contentContainer,\n          contentContainerStyle && contentContainerStyle,\n        ]}\n      >\n        <Text\n          h4\n          style={[styles.text, titleStyle && titleStyle]}\n          numberOfLines={titleNumberOfLines}\n        >\n          {title}\n        </Text>\n        {children}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nTile.propTypes = {\n  title: PropTypes.string,\n  icon: PropTypes.object,\n  caption: PropTypes.string,\n  imageSrc: Image.propTypes.source,\n  onPress: PropTypes.func,\n  activeOpacity: PropTypes.number,\n  containerStyle: ViewPropTypes.style,\n  imageContainerStyle: ViewPropTypes.style,\n  iconContainerStyle: ViewPropTypes.style,\n  overlayContainerStyle: ViewPropTypes.style,\n  titleStyle: NativeText.propTypes.style,\n  captionStyle: NativeText.propTypes.style,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  featured: PropTypes.bool,\n  children: PropTypes.any,\n  contentContainerStyle: ViewPropTypes.style,\n  titleNumberOfLines: PropTypes.number,\n};\n\nexport default Tile;\n"]},"metadata":{},"sourceType":"module"}