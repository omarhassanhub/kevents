{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/hassao03/code/node_modules/react-native-elements/src/icons/Icon.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport NativeText from \"react-native-web/dist/exports/Text\";\nimport getIconType from \"../helpers/getIconType\";\nimport ViewPropTypes from \"../config/ViewPropTypes\";\n\nvar Icon = function Icon(props) {\n  var type = props.type,\n      name = props.name,\n      size = props.size,\n      color = props.color,\n      iconStyle = props.iconStyle,\n      component = props.component,\n      underlayColor = props.underlayColor,\n      reverse = props.reverse,\n      raised = props.raised,\n      containerStyle = props.containerStyle,\n      reverseColor = props.reverseColor,\n      onPress = props.onPress,\n      attributes = _objectWithoutProperties(props, [\"type\", \"name\", \"size\", \"color\", \"iconStyle\", \"component\", \"underlayColor\", \"reverse\", \"raised\", \"containerStyle\", \"reverseColor\", \"onPress\"]);\n\n  var Component = View;\n\n  if (onPress) {\n    Component = TouchableHighlight;\n  }\n\n  if (component) {\n    Component = component;\n  }\n\n  var Icon;\n\n  if (!type) {\n    Icon = getIconType('material');\n  } else {\n    Icon = getIconType(type);\n  }\n\n  return React.createElement(Component, _extends({}, attributes, {\n    underlayColor: reverse ? color : underlayColor || color,\n    style: [(reverse || raised) && styles.button, (reverse || raised) && {\n      borderRadius: size + 4,\n      height: size * 2 + 4,\n      width: size * 2 + 4\n    }, raised && styles.raised, {\n      backgroundColor: reverse ? color : raised ? 'white' : 'transparent',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }, containerStyle && containerStyle],\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }), React.createElement(Icon, {\n    style: [{\n      backgroundColor: 'transparent'\n    }, iconStyle && iconStyle],\n    size: size,\n    name: name,\n    color: reverse ? reverseColor : color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n};\n\nIcon.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n  size: PropTypes.number,\n  color: PropTypes.string,\n  component: PropTypes.func,\n  underlayColor: PropTypes.string,\n  reverse: PropTypes.bool,\n  raised: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  iconStyle: NativeText.propTypes.style,\n  onPress: PropTypes.func,\n  reverseColor: PropTypes.string\n};\nIcon.defaultProps = {\n  underlayColor: 'white',\n  reverse: false,\n  raised: false,\n  size: 24,\n  color: 'black',\n  reverseColor: 'white'\n};\nvar styles = StyleSheet.create({\n  button: {\n    margin: 7\n  },\n  raised: _objectSpread({}, Platform.select({\n    ios: {\n      shadowColor: 'rgba(0,0,0, .4)',\n      shadowOffset: {\n        height: 1,\n        width: 1\n      },\n      shadowOpacity: 1,\n      shadowRadius: 1\n    },\n    android: {\n      elevation: 2\n    }\n  }))\n});\nexport default Icon;","map":{"version":3,"sources":["/Users/hassao03/code/node_modules/react-native-elements/src/icons/Icon.js"],"names":["PropTypes","React","getIconType","ViewPropTypes","Icon","props","type","name","size","color","iconStyle","component","underlayColor","reverse","raised","containerStyle","reverseColor","onPress","attributes","Component","View","TouchableHighlight","styles","button","borderRadius","height","width","backgroundColor","alignItems","justifyContent","propTypes","string","number","func","bool","style","NativeText","defaultProps","StyleSheet","create","margin","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Platform,\n  TouchableHighlight,\n  View,\n  StyleSheet,\n  Text as NativeText,\n} from 'react-native';\nimport getIconType from '../helpers/getIconType';\nimport ViewPropTypes from '../config/ViewPropTypes';\n\nconst Icon = props => {\n  const {\n    type,\n    name,\n    size,\n    color,\n    iconStyle,\n    component,\n    underlayColor,\n    reverse,\n    raised,\n    containerStyle,\n    reverseColor,\n    onPress,\n    ...attributes\n  } = props;\n\n  let Component = View;\n  if (onPress) {\n    Component = TouchableHighlight;\n  }\n  if (component) {\n    Component = component;\n  }\n  let Icon;\n  if (!type) {\n    Icon = getIconType('material');\n  } else {\n    Icon = getIconType(type);\n  }\n  return (\n    <Component\n      {...attributes}\n      underlayColor={reverse ? color : underlayColor || color}\n      style={[\n        (reverse || raised) && styles.button,\n        (reverse || raised) && {\n          borderRadius: size + 4,\n          height: size * 2 + 4,\n          width: size * 2 + 4,\n        },\n        raised && styles.raised,\n        {\n          backgroundColor: reverse ? color : raised ? 'white' : 'transparent',\n          alignItems: 'center',\n          justifyContent: 'center',\n        },\n        containerStyle && containerStyle,\n      ]}\n      onPress={onPress}\n    >\n      <Icon\n        style={[{ backgroundColor: 'transparent' }, iconStyle && iconStyle]}\n        size={size}\n        name={name}\n        color={reverse ? reverseColor : color}\n      />\n    </Component>\n  );\n};\n\nIcon.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n  size: PropTypes.number,\n  color: PropTypes.string,\n  component: PropTypes.func,\n  underlayColor: PropTypes.string,\n  reverse: PropTypes.bool,\n  raised: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  iconStyle: NativeText.propTypes.style,\n  onPress: PropTypes.func,\n  reverseColor: PropTypes.string,\n};\n\nIcon.defaultProps = {\n  underlayColor: 'white',\n  reverse: false,\n  raised: false,\n  size: 24,\n  color: 'black',\n  reverseColor: 'white',\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    margin: 7,\n  },\n  raised: {\n    ...Platform.select({\n      ios: {\n        shadowColor: 'rgba(0,0,0, .4)',\n        shadowOffset: { height: 1, width: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 1,\n      },\n      android: {\n        elevation: 2,\n      },\n    }),\n  },\n});\n\nexport default Icon;\n"]},"metadata":{},"sourceType":"module"}