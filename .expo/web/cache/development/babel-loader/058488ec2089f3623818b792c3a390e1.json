{"ast":null,"code":"var _jsxFileName = \"/Users/hassao03/code/src/AppContainer.js\";\nimport React from 'react';\nimport { createStackNavigator, TransitionSpecs } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport AccountScreen from \"./screens/AccountScreen\";\nimport DetailsScreen from \"./screens/DetailsScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport EventScreen from \"./screens/EventScreen\";\nimport ChatScreen from \"./screens/ChatScreen\";\nimport CreateScreen from \"./screens/CreateScreen\";\nimport ModalScreen from \"./screens/AuthScreen\";\nvar Stack = createStackNavigator();\nvar HomeStack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nfunction shouldHeaderBeShown(route) {\n  var routeName = route.state ? route.state.routes[route.state.index].name : 'HomeTab';\n\n  switch (routeName) {\n    default:\n      return false;\n  }\n}\n\nvar HomeTabNavigator = function HomeTabNavigator(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  return React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref2) {\n      var route = _ref2.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n              size = _ref3.size;\n          var iconName;\n          if (route.name == 'Home') iconName = 'ios-home';else if (route.name == 'History') iconName = 'ios-globe';else if (route.name == 'Account') iconName = 'ios-person';\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 18\n            }\n          });\n        }\n      };\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    options: function options(route) {\n      return {\n        title: 'Home',\n        headerShown: shouldHeaderBeShown(route)\n      };\n    },\n    name: \"Home\",\n    component: HomeScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    options: function options() {\n      return {\n        title: 'Account'\n      };\n    },\n    name: \"Account\",\n    component: AccountScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar HomeStackNavigator = function HomeStackNavigator() {\n  return React.createElement(HomeStack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, React.createElement(HomeStack.Screen, {\n    options: function options() {\n      return {\n        title: 'Settings',\n        headerShown: false\n      };\n    },\n    name: \"HomeTabNavigator\",\n    component: HomeTabNavigator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), React.createElement(HomeStack.Screen, {\n    options: function options() {\n      return {\n        headerShown: false\n      };\n    },\n    name: \"Details\",\n    component: DetailsScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), React.createElement(HomeStack.Screen, {\n    options: function options() {\n      return {\n        headerShown: false\n      };\n    },\n    name: \"Event\",\n    component: EventScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), React.createElement(HomeStack.Screen, {\n    options: function options() {\n      return {\n        headerShown: false\n      };\n    },\n    name: \"Chat\",\n    component: ChatScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default function AppContainer() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      gestureEnabled: true,\n      gestureDirection: 'horizontal'\n    },\n    headerMode: \"float\",\n    mode: \"modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    options: function options(_ref4) {\n      var route = _ref4.route;\n      return {\n        headerShown: shouldHeaderBeShown(route)\n      };\n    },\n    name: \"HomeStackNavigator\",\n    component: HomeStackNavigator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    options: function options() {\n      return {\n        headerShown: false\n      };\n    },\n    name: \"Create\",\n    component: CreateScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    options: function options() {\n      return {\n        headerShown: false\n      };\n    },\n    name: \"Modal\",\n    component: ModalScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/hassao03/code/src/AppContainer.js"],"names":["React","createStackNavigator","TransitionSpecs","createBottomTabNavigator","Ionicons","AccountScreen","DetailsScreen","HomeScreen","EventScreen","ChatScreen","CreateScreen","ModalScreen","Stack","HomeStack","Tab","shouldHeaderBeShown","route","routeName","state","routes","index","name","HomeTabNavigator","navigation","tabBarIcon","color","size","iconName","title","headerShown","HomeStackNavigator","AppContainer","gestureEnabled","gestureDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStackNavigator, TransitionSpecs } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport AccountScreen from './screens/AccountScreen';\nimport DetailsScreen from './screens/DetailsScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport EventScreen from './screens/EventScreen';\nimport ChatScreen from './screens/ChatScreen';\nimport CreateScreen from './screens/CreateScreen';\nimport ModalScreen from './screens/AuthScreen';\n\nconst Stack = createStackNavigator();\nconst HomeStack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\n// function getHeaderTitle(route) {\n//   const routeName = route.name;\n//   switch (routeName) {\n//     case 'History':\n//       return 'My Travel Records';\n//     case 'Settings':\n//       return 'My Settings';\n//     default:\n//       return 'Welcome';\n//   }\n// }\n\nfunction shouldHeaderBeShown(route) {\n  const routeName = route.state\n    ? route.state.routes[route.state.index].name\n    : 'HomeTab';\n\n  switch (routeName) {\n    // case 'HomeTab':\n    // case 'HistoryTab':\n    // case 'SettingsTab':\n    default:\n      return false;\n    //   return true;\n  }\n}\n\nconst HomeTabNavigator = ({ navigation, route }) => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ color, size }) => {\n          let iconName;\n          if (route.name == 'Home') iconName = 'ios-home';\n          else if (route.name == 'History') iconName = 'ios-globe';\n          else if (route.name == 'Account') iconName = 'ios-person';\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n      })}\n    >\n      <Tab.Screen\n        options={(route) => ({\n          title: 'Home',\n          headerShown: shouldHeaderBeShown(route),\n        })}\n        name='Home'\n        component={HomeScreen}\n      />\n      <Tab.Screen\n        options={() => ({\n          title: 'Account',\n        })}\n        name='Account'\n        component={AccountScreen}\n      />\n    </Tab.Navigator>\n  );\n};\n\nconst HomeStackNavigator = () => {\n  return (\n    <HomeStack.Navigator>\n      <HomeStack.Screen\n        options={() => ({\n          title: 'Settings',\n          headerShown: false,\n        })}\n        name='HomeTabNavigator'\n        component={HomeTabNavigator}\n      />\n      <HomeStack.Screen\n        options={() => ({\n          headerShown: false,\n        })}\n        name='Details'\n        component={DetailsScreen}\n      />\n      <HomeStack.Screen\n        options={() => ({\n          headerShown: false,\n        })}\n        name='Event'\n        component={EventScreen}\n      />\n      <HomeStack.Screen\n        options={() => ({\n          headerShown: false,\n        })}\n        name='Chat'\n        component={ChatScreen}\n      />\n    </HomeStack.Navigator>\n  );\n};\n\nexport default function AppContainer() {\n  return (\n    <Stack.Navigator\n      screenOptions={{ gestureEnabled: true, gestureDirection: 'horizontal' }}\n      headerMode='float'\n      mode='modal'\n    >\n      <Stack.Screen\n        options={({ route }) => ({\n          headerShown: shouldHeaderBeShown(route),\n        })}\n        name='HomeStackNavigator'\n        component={HomeStackNavigator}\n      />\n      <Stack.Screen\n        options={() => ({\n          headerShown: false,\n        })}\n        name='Create'\n        component={CreateScreen}\n      />\n      <Stack.Screen\n        options={() => ({\n          headerShown: false,\n        })}\n        name='Modal'\n        component={ModalScreen}\n      />\n    </Stack.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}