{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/hassao03/code/node_modules/react-native-gifted-chat/lib/Send.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport Color from \"./Color\";\nvar styles = StyleSheet.create({\n  container: {\n    height: 44,\n    justifyContent: 'flex-end'\n  },\n  text: {\n    color: Color.defaultBlue,\n    fontWeight: '600',\n    fontSize: 17,\n    backgroundColor: Color.backgroundTransparent,\n    marginBottom: 12,\n    marginLeft: 10,\n    marginRight: 10\n  }\n});\n\nvar Send = function (_Component) {\n  _inherits(Send, _Component);\n\n  var _super = _createSuper(Send);\n\n  function Send() {\n    _classCallCheck(this, Send);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Send, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          text = _this$props.text,\n          containerStyle = _this$props.containerStyle,\n          onSend = _this$props.onSend,\n          children = _this$props.children,\n          textStyle = _this$props.textStyle,\n          label = _this$props.label,\n          alwaysShowSend = _this$props.alwaysShowSend,\n          disabled = _this$props.disabled,\n          sendButtonProps = _this$props.sendButtonProps;\n\n      if (alwaysShowSend || text && text.trim().length > 0) {\n        return React.createElement(TouchableOpacity, _extends({\n          testID: \"send\",\n          accessible: true,\n          accessibilityLabel: \"send\",\n          style: [styles.container, containerStyle],\n          onPress: function onPress() {\n            if (text && onSend) {\n              onSend({\n                text: text.trim()\n              }, true);\n            }\n          },\n          accessibilityTraits: \"button\",\n          disabled: disabled\n        }, sendButtonProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }\n        }), React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }\n        }, children || React.createElement(Text, {\n          style: [styles.text, textStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 26\n          }\n        }, label)));\n      }\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 16\n        }\n      });\n    }\n  }]);\n\n  return Send;\n}(Component);\n\nexport { Send as default };\nSend.defaultProps = {\n  text: '',\n  onSend: function onSend() {},\n  label: 'Send',\n  containerStyle: {},\n  textStyle: {},\n  children: null,\n  alwaysShowSend: false,\n  disabled: false,\n  sendButtonProps: null\n};\nSend.propTypes = {\n  text: PropTypes.string,\n  onSend: PropTypes.func,\n  label: PropTypes.string,\n  containerStyle: ViewPropTypes.style,\n  textStyle: PropTypes.any,\n  children: PropTypes.element,\n  alwaysShowSend: PropTypes.bool,\n  disabled: PropTypes.bool,\n  sendButtonProps: PropTypes.object\n};","map":{"version":3,"sources":["../src/Send.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View, ViewPropTypes, } from 'react-native';\nimport Color from './Color';\nconst styles = StyleSheet.create({\n    container: {\n        height: 44,\n        justifyContent: 'flex-end',\n    },\n    text: {\n        color: Color.defaultBlue,\n        fontWeight: '600',\n        fontSize: 17,\n        backgroundColor: Color.backgroundTransparent,\n        marginBottom: 12,\n        marginLeft: 10,\n        marginRight: 10,\n    },\n});\nexport default class Send extends Component {\n    render() {\n        const { text, containerStyle, onSend, children, textStyle, label, alwaysShowSend, disabled, sendButtonProps, } = this.props;\n        if (alwaysShowSend || (text && text.trim().length > 0)) {\n            return (<TouchableOpacity testID='send' accessible accessibilityLabel='send' style={[styles.container, containerStyle]} onPress={() => {\n                if (text && onSend) {\n                    onSend({ text: text.trim() }, true);\n                }\n            }} accessibilityTraits='button' disabled={disabled} {...sendButtonProps}>\n          <View>\n            {children || <Text style={[styles.text, textStyle]}>{label}</Text>}\n          </View>\n        </TouchableOpacity>);\n        }\n        return <View />;\n    }\n}\nSend.defaultProps = {\n    text: '',\n    onSend: () => { },\n    label: 'Send',\n    containerStyle: {},\n    textStyle: {},\n    children: null,\n    alwaysShowSend: false,\n    disabled: false,\n    sendButtonProps: null,\n};\nSend.propTypes = {\n    text: PropTypes.string,\n    onSend: PropTypes.func,\n    label: PropTypes.string,\n    containerStyle: ViewPropTypes.style,\n    textStyle: PropTypes.any,\n    children: PropTypes.element,\n    alwaysShowSend: PropTypes.bool,\n    disabled: PropTypes.bool,\n    sendButtonProps: PropTypes.object,\n};\n//# sourceMappingURL=Send.js.map"]},"metadata":{},"sourceType":"module"}