{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/hassao03/code/node_modules/react-native-elements/src/rating/Rating.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport times from 'lodash.times';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"../text/Text\";\nimport ViewPropTypes from \"../config/ViewPropTypes\";\n\nvar STAR_IMAGE = require(\"./images/star.png\");\n\nvar HEART_IMAGE = require(\"./images/heart.png\");\n\nvar ROCKET_IMAGE = require(\"./images/rocket.png\");\n\nvar BELL_IMAGE = require(\"./images/bell.png\");\n\nvar STAR_WIDTH = 60;\nvar TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: '#f1c40f',\n    backgroundColor: 'white'\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: '#e74c3c',\n    backgroundColor: 'white'\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: '#2ecc71',\n    backgroundColor: 'white'\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: '#f39c12',\n    backgroundColor: 'white'\n  }\n};\n\nvar Rating = function (_Component) {\n  _inherits(Rating, _Component);\n\n  var _super = _createSuper(Rating);\n\n  function Rating(props) {\n    var _this;\n\n    _classCallCheck(this, Rating);\n\n    _this = _super.call(this, props);\n    var _this$props = _this.props,\n        onFinishRating = _this$props.onFinishRating,\n        fractions = _this$props.fractions;\n    var position = new Animated.ValueXY();\n    var panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n        return true;\n      },\n      onPanResponderMove: function onPanResponderMove(event, gesture) {\n        var newPosition = new Animated.ValueXY();\n        newPosition.setValue({\n          x: gesture.dx,\n          y: 0\n        });\n\n        _this.setState({\n          position: newPosition,\n          value: gesture.dx\n        });\n      },\n      onPanResponderRelease: function onPanResponderRelease() {\n        var rating = _this.getCurrentRating();\n\n        if (!fractions) {\n          _this.setCurrentRating(rating);\n        }\n\n        onFinishRating(rating);\n      }\n    });\n    _this.state = {\n      panResponder: panResponder,\n      position: position\n    };\n    return _this;\n  }\n\n  _createClass(Rating, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setCurrentRating(this.props.startingValue);\n    }\n  }, {\n    key: \"getPrimaryViewStyle\",\n    value: function getPrimaryViewStyle() {\n      var position = this.state.position;\n      var _this$props2 = this.props,\n          imageSize = _this$props2.imageSize,\n          ratingCount = _this$props2.ratingCount,\n          type = _this$props2.type;\n      var color = TYPES[type].color;\n      var width = position.x.interpolate({\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [0, ratingCount * imageSize / 2, ratingCount * imageSize],\n        extrapolate: 'clamp'\n      }, {\n        useNativeDriver: true\n      });\n      return {\n        backgroundColor: color,\n        width: width,\n        height: width ? imageSize : 0\n      };\n    }\n  }, {\n    key: \"getSecondaryViewStyle\",\n    value: function getSecondaryViewStyle() {\n      var position = this.state.position;\n      var _this$props3 = this.props,\n          imageSize = _this$props3.imageSize,\n          ratingCount = _this$props3.ratingCount,\n          type = _this$props3.type;\n      var backgroundColor = TYPES[type].backgroundColor;\n      var width = position.x.interpolate({\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [ratingCount * imageSize, ratingCount * imageSize / 2, 0],\n        extrapolate: 'clamp'\n      }, {\n        useNativeDriver: true\n      });\n      return {\n        backgroundColor: backgroundColor,\n        width: width,\n        height: width ? imageSize : 0\n      };\n    }\n  }, {\n    key: \"renderRatings\",\n    value: function renderRatings() {\n      var _this$props4 = this.props,\n          imageSize = _this$props4.imageSize,\n          ratingCount = _this$props4.ratingCount,\n          type = _this$props4.type;\n      var source = TYPES[type].source;\n      return times(ratingCount, function (index) {\n        return React.createElement(View, {\n          key: index,\n          style: styles.starContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 7\n          }\n        }, React.createElement(Image, {\n          source: source,\n          style: {\n            width: imageSize,\n            height: imageSize\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 9\n          }\n        }));\n      });\n    }\n  }, {\n    key: \"getCurrentRating\",\n    value: function getCurrentRating() {\n      var value = this.state.value;\n      var _this$props5 = this.props,\n          fractions = _this$props5.fractions,\n          imageSize = _this$props5.imageSize,\n          ratingCount = _this$props5.ratingCount;\n      var startingValue = ratingCount / 2;\n      var currentRating = 0;\n\n      if (value > ratingCount * imageSize / 2) {\n        currentRating = ratingCount;\n      } else if (value < -ratingCount * imageSize / 2) {\n        currentRating = 0;\n      } else if (value < imageSize || value > imageSize) {\n        currentRating = startingValue + value / imageSize;\n        currentRating = !fractions ? Math.ceil(currentRating) : +currentRating.toFixed(fractions);\n      } else {\n        currentRating = !fractions ? Math.ceil(startingValue) : +startingValue.toFixed(fractions);\n      }\n\n      return currentRating;\n    }\n  }, {\n    key: \"setCurrentRating\",\n    value: function setCurrentRating(rating) {\n      var _this$props6 = this.props,\n          imageSize = _this$props6.imageSize,\n          ratingCount = _this$props6.ratingCount;\n      var initialRating = ratingCount / 2;\n      var value = null;\n\n      if (rating > ratingCount) {\n        value = ratingCount * imageSize / 2;\n      } else if (rating < 0) {\n        value = -ratingCount * imageSize / 2;\n      } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n        value = (rating - initialRating) * imageSize;\n      } else {\n        value = 0;\n      }\n\n      var newPosition = new Animated.ValueXY();\n      newPosition.setValue({\n        x: value,\n        y: 0\n      });\n      this.setState({\n        position: newPosition,\n        value: value\n      });\n    }\n  }, {\n    key: \"displayCurrentRating\",\n    value: function displayCurrentRating() {\n      var _this$props7 = this.props,\n          ratingCount = _this$props7.ratingCount,\n          type = _this$props7.type,\n          readonly = _this$props7.readonly;\n      var color = TYPES[type].color;\n      return React.createElement(View, {\n        style: styles.showRatingView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.ratingView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.ratingText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }\n      }, \"Rating: \"), React.createElement(Text, {\n        style: [styles.currentRatingText, {\n          color: color\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }\n      }, this.getCurrentRating()), React.createElement(Text, {\n        style: styles.maxRatingText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }\n      }, \"/\", ratingCount)), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }\n      }, readonly && React.createElement(Text, {\n        style: styles.readonlyLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 24\n        }\n      }, \"(readonly)\")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          readonly = _this$props8.readonly,\n          type = _this$props8.type,\n          ratingImage = _this$props8.ratingImage,\n          ratingColor = _this$props8.ratingColor,\n          ratingBackgroundColor = _this$props8.ratingBackgroundColor,\n          style = _this$props8.style,\n          showRating = _this$props8.showRating;\n\n      if (type === 'custom') {\n        var custom = {\n          source: ratingImage,\n          color: ratingColor,\n          backgroundColor: ratingBackgroundColor\n        };\n        TYPES.custom = custom;\n      }\n\n      return React.createElement(View, {\n        pointerEvents: readonly ? 'none' : 'auto',\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 7\n        }\n      }, showRating && this.displayCurrentRating(), React.createElement(View, _extends({\n        style: styles.starsWrapper\n      }, this.state.panResponder.panHandlers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.starsInsideWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }\n      }, React.createElement(Animated.View, {\n        style: this.getPrimaryViewStyle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }\n      }), React.createElement(Animated.View, {\n        style: this.getSecondaryViewStyle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }\n      })), this.renderRatings()));\n    }\n  }]);\n\n  return Rating;\n}(Component);\n\nRating.defaultProps = {\n  type: 'star',\n  ratingImage: require(\"./images/star.png\"),\n  ratingColor: '#f1c40f',\n  ratingBackgroundColor: 'white',\n  ratingCount: 5,\n  imageSize: STAR_WIDTH,\n  onFinishRating: function onFinishRating() {\n    return console.log('Attach a function here.');\n  }\n};\nexport { Rating as default };\nvar styles = StyleSheet.create({\n  starsWrapper: {\n    flexDirection: 'row'\n  },\n  starsInsideWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    flexDirection: 'row'\n  },\n  showRatingView: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  },\n  readonlyLabel: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495a'\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  }\n});\n\nvar fractionsType = function fractionsType(props, propName, componentName) {\n  if (props[propName]) {\n    var value = props[propName];\n\n    if (typeof value === 'number') {\n      return value >= 0 && value <= 20 ? null : new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be between 0 and 20\");\n    }\n\n    return new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be a number\");\n  }\n};\n\nRating.propTypes = {\n  type: PropTypes.string,\n  ratingImage: Image.propTypes.source,\n  ratingColor: PropTypes.string,\n  ratingBackgroundColor: PropTypes.string,\n  ratingCount: PropTypes.number,\n  imageSize: PropTypes.number,\n  onFinishRating: PropTypes.func,\n  showRating: PropTypes.bool,\n  style: ViewPropTypes.style,\n  readonly: PropTypes.bool,\n  startingValue: PropTypes.number,\n  fractions: fractionsType\n};","map":{"version":3,"sources":["/Users/hassao03/code/node_modules/react-native-elements/src/rating/Rating.js"],"names":["times","PropTypes","React","Component","Text","ViewPropTypes","STAR_IMAGE","require","HEART_IMAGE","ROCKET_IMAGE","BELL_IMAGE","STAR_WIDTH","TYPES","star","source","color","backgroundColor","heart","rocket","bell","Rating","props","onFinishRating","fractions","position","Animated","ValueXY","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderMove","event","gesture","newPosition","setValue","x","dx","y","setState","value","onPanResponderRelease","rating","getCurrentRating","setCurrentRating","state","startingValue","imageSize","ratingCount","type","width","interpolate","inputRange","outputRange","extrapolate","useNativeDriver","height","index","styles","starContainer","currentRating","Math","ceil","toFixed","initialRating","readonly","showRatingView","ratingView","ratingText","currentRatingText","maxRatingText","readonlyLabel","ratingImage","ratingColor","ratingBackgroundColor","style","showRating","custom","displayCurrentRating","starsWrapper","panHandlers","starsInsideWrapper","getPrimaryViewStyle","getSecondaryViewStyle","renderRatings","defaultProps","console","log","StyleSheet","flexDirection","top","left","justifyContent","alignItems","paddingBottom","fontSize","textAlign","fontFamily","Platform","OS","fractionsType","propName","componentName","Error","propTypes","string","Image","number","func","bool"],"mappings":"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","sourcesContent":["/*global require:true*/\n/*eslint no-undef: \"error\"*/\n/*eslint-disable no-console */\nimport times from 'lodash.times';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport {\n  View,\n  Animated,\n  PanResponder,\n  Image,\n  StyleSheet,\n  Platform,\n} from 'react-native';\n\nimport Text from '../text/Text';\nimport ViewPropTypes from '../config/ViewPropTypes';\n\nconst STAR_IMAGE = require('./images/star.png');\nconst HEART_IMAGE = require('./images/heart.png');\nconst ROCKET_IMAGE = require('./images/rocket.png');\nconst BELL_IMAGE = require('./images/bell.png');\n\nconst STAR_WIDTH = 60;\n\nconst TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: '#f1c40f',\n    backgroundColor: 'white',\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: '#e74c3c',\n    backgroundColor: 'white',\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: '#2ecc71',\n    backgroundColor: 'white',\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: '#f39c12',\n    backgroundColor: 'white',\n  },\n};\n\nexport default class Rating extends Component {\n  static defaultProps = {\n    type: 'star',\n    ratingImage: require('./images/star.png'),\n    ratingColor: '#f1c40f',\n    ratingBackgroundColor: 'white',\n    ratingCount: 5,\n    imageSize: STAR_WIDTH,\n    onFinishRating: () => console.log('Attach a function here.'),\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { onFinishRating, fractions } = this.props;\n\n    const position = new Animated.ValueXY();\n\n    const panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderMove: (event, gesture) => {\n        const newPosition = new Animated.ValueXY();\n        newPosition.setValue({ x: gesture.dx, y: 0 });\n        this.setState({ position: newPosition, value: gesture.dx });\n      },\n      onPanResponderRelease: () => {\n        const rating = this.getCurrentRating();\n        if (!fractions) {\n          // \"round up\" to the nearest star/rocket/whatever\n          this.setCurrentRating(rating);\n        }\n        onFinishRating(rating);\n      },\n    });\n\n    this.state = { panResponder, position };\n  }\n\n  componentDidMount() {\n    this.setCurrentRating(this.props.startingValue);\n  }\n\n  getPrimaryViewStyle() {\n    const { position } = this.state;\n    const { imageSize, ratingCount, type } = this.props;\n\n    const color = TYPES[type].color;\n\n    const width = position.x.interpolate(\n      {\n        inputRange: [\n          -ratingCount * (imageSize / 2),\n          0,\n          ratingCount * (imageSize / 2),\n        ],\n        outputRange: [0, ratingCount * imageSize / 2, ratingCount * imageSize],\n        extrapolate: 'clamp',\n      },\n      { useNativeDriver: true }\n    );\n\n    return {\n      backgroundColor: color,\n      width,\n      height: width ? imageSize : 0,\n    };\n  }\n\n  getSecondaryViewStyle() {\n    const { position } = this.state;\n    const { imageSize, ratingCount, type } = this.props;\n\n    const backgroundColor = TYPES[type].backgroundColor;\n\n    const width = position.x.interpolate(\n      {\n        inputRange: [\n          -ratingCount * (imageSize / 2),\n          0,\n          ratingCount * (imageSize / 2),\n        ],\n        outputRange: [ratingCount * imageSize, ratingCount * imageSize / 2, 0],\n        extrapolate: 'clamp',\n      },\n      { useNativeDriver: true }\n    );\n\n    return {\n      backgroundColor,\n      width,\n      height: width ? imageSize : 0,\n    };\n  }\n\n  renderRatings() {\n    const { imageSize, ratingCount, type } = this.props;\n    const source = TYPES[type].source;\n\n    return times(ratingCount, index =>\n      <View key={index} style={styles.starContainer}>\n        <Image\n          source={source}\n          style={{ width: imageSize, height: imageSize }}\n        />\n      </View>\n    );\n  }\n\n  getCurrentRating() {\n    const { value } = this.state;\n    const { fractions, imageSize, ratingCount } = this.props;\n    const startingValue = ratingCount / 2;\n    let currentRating = 0;\n\n    if (value > ratingCount * imageSize / 2) {\n      currentRating = ratingCount;\n    } else if (value < -ratingCount * imageSize / 2) {\n      currentRating = 0;\n    } else if (value < imageSize || value > imageSize) {\n      currentRating = startingValue + value / imageSize;\n      currentRating = !fractions\n        ? Math.ceil(currentRating)\n        : +currentRating.toFixed(fractions);\n    } else {\n      currentRating = !fractions\n        ? Math.ceil(startingValue)\n        : +startingValue.toFixed(fractions);\n    }\n\n    return currentRating;\n  }\n\n  setCurrentRating(rating) {\n    const { imageSize, ratingCount } = this.props;\n    // `initialRating` corresponds to `startingValue` in the getter. Naming it\n    // differently here avoids confusion with `value` below.\n    const initialRating = ratingCount / 2;\n    let value = null;\n\n    if (rating > ratingCount) {\n      value = ratingCount * imageSize / 2;\n    } else if (rating < 0) {\n      value = -ratingCount * imageSize / 2;\n    } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n      value = (rating - initialRating) * imageSize;\n    } else {\n      value = 0;\n    }\n\n    const newPosition = new Animated.ValueXY();\n    newPosition.setValue({ x: value, y: 0 });\n    this.setState({ position: newPosition, value });\n  }\n\n  displayCurrentRating() {\n    const { ratingCount, type, readonly } = this.props;\n\n    const color = TYPES[type].color;\n\n    return (\n      <View style={styles.showRatingView}>\n        <View style={styles.ratingView}>\n          <Text style={styles.ratingText}>Rating: </Text>\n          <Text style={[styles.currentRatingText, { color }]}>\n            {this.getCurrentRating()}\n          </Text>\n          <Text style={styles.maxRatingText}>\n            /{ratingCount}\n          </Text>\n        </View>\n        <View>\n          {readonly && <Text style={styles.readonlyLabel}>(readonly)</Text>}\n        </View>\n      </View>\n    );\n  }\n\n  render() {\n    const {\n      readonly,\n      type,\n      ratingImage,\n      ratingColor,\n      ratingBackgroundColor,\n      style,\n      showRating,\n    } = this.props;\n\n    if (type === 'custom') {\n      let custom = {\n        source: ratingImage,\n        color: ratingColor,\n        backgroundColor: ratingBackgroundColor,\n      };\n      TYPES.custom = custom;\n    }\n\n    return (\n      <View pointerEvents={readonly ? 'none' : 'auto'} style={style}>\n        {showRating && this.displayCurrentRating()}\n        <View\n          style={styles.starsWrapper}\n          {...this.state.panResponder.panHandlers}\n        >\n          <View style={styles.starsInsideWrapper}>\n            <Animated.View style={this.getPrimaryViewStyle()} />\n            <Animated.View style={this.getSecondaryViewStyle()} />\n          </View>\n          {this.renderRatings()}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  starsWrapper: {\n    flexDirection: 'row',\n  },\n  starsInsideWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    flexDirection: 'row',\n  },\n  showRatingView: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5,\n  },\n  ratingView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5,\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e',\n  },\n  readonlyLabel: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495a',\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e',\n  },\n});\n\nconst fractionsType = (props, propName, componentName) => {\n  if (props[propName]) {\n    const value = props[propName];\n    if (typeof value === 'number') {\n      return value >= 0 && value <= 20\n        ? null\n        : new Error(\n            `\\`${propName}\\` in \\`${componentName}\\` must be between 0 and 20`\n          );\n    }\n\n    return new Error(\n      `\\`${propName}\\` in \\`${componentName}\\` must be a number`\n    );\n  }\n};\n\nRating.propTypes = {\n  type: PropTypes.string,\n  ratingImage: Image.propTypes.source,\n  ratingColor: PropTypes.string,\n  ratingBackgroundColor: PropTypes.string,\n  ratingCount: PropTypes.number,\n  imageSize: PropTypes.number,\n  onFinishRating: PropTypes.func,\n  showRating: PropTypes.bool,\n  style: ViewPropTypes.style,\n  readonly: PropTypes.bool,\n  startingValue: PropTypes.number,\n  fractions: fractionsType,\n};\n"]},"metadata":{},"sourceType":"module"}